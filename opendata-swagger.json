{
  "swagger": "2.0",
  "info": {
    "version": "v1.3",
    "title": "Open Data API",
    "description": "Latest Swagger specification for OpenData"
  },
  "host": "developer.openbanking.org.uk",
  "basePath": "/reference-implementation/open-banking/v1.3",
  "schemes": ["https"],
  "produces": ["application/prs.openbanking.opendata.v1.3+json"],
  "tags": [{
    "name": "Branch",
    "description": "Endpoint for getting Branch data"
  }, {
    "name": "ATM",
    "description": "Endpoint for getting ATM data"
  }, {
    "name": "PCA",
    "description": "Endpoint for getting Personal Current Account data"
  }, {
    "name": "BCA",
    "description": "Endpoint for getting Business Current Account data"
  }, {
    "name": "SME",
    "description": "Endpoint for getting Unsecured SME Loan data"
  }, {
    "name": "CCC",
    "description": "Endpoint for getting Commercial Credit Card data"
  }],
  "paths": {
    "/branches": {
      "get": {
        "tags": ["Branch"],
        "description": "Gets a list of all `Branch` objects.",
        "parameters": [{
          "name": "If-Modified-Since",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if modified since a given date",
          "in": "header",
          "required": false
        }, {
          "name": "If-None-Match",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "in": "header",
          "required": false
        }],
        "responses": {
          "200": {
            "description": "Successful response with a list of `Branch` data",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header",
                "default": "max-age=31536000"
              },
              "Etag": {
                "type": "string",
                "description": "A unique ID identifying whether this resource has changed"
              },
              "Cache-Control": {
                "type": "string",
                "description": "Describes how long this response can be cached",
                "default": "max-age=28800"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "title": "Meta data",
                  "type": "object",
                  "properties": {
                    "LastUpdated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "TotalResults": {
                      "type": "integer"
                    },
                    "Agreement": {
                      "type": "string",
                      "enum": ["Use of the APIs and any related data will be subject to the terms of the Open Licence and subject to terms and conditions"]
                    },
                    "License": {
                      "description": "Open Banking License",
                      "type": "string",
                      "format": "uri",
                      "enum": ["https://www.openbanking.org.uk/open-licence"]
                    },
                    "TermsOfUse": {
                      "description": "Open Banking Terms of Use",
                      "type": "string",
                      "format": "uri",
                      "enum": ["https://www.openbanking.org.uk/terms"]
                    }
                  },
                  "required": ["LastUpdated", "TotalResults", "Agreement", "License", "TermsOfUse"],
                  "additionalProperties": false
                },
                "data": {
                  "type": "array",
                  "items": {
                    "title": "Branch",
                    "type": "object",
                    "properties": {
                      "Organisation": {
                        "description": "Organisation",
                        "type": "object",
                        "properties": {
                          "ParentOrganisation": {
                            "description": "Parent organisation",
                            "type": "object",
                            "properties": {
                              "LEI": {
                                "description": "The LEI ID of the organisation",
                                "type": "string",
                                "pattern": "^[A-Z0-9]{18,18}[0-9]{2,2}$"
                              },
                              "BIC": {
                                "description": "The BIC from the organisation",
                                "type": "string",
                                "pattern": "[A-Z]{6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3})?"
                              },
                              "OrganisationName": {
                                "description": "Organisation Name",
                                "type": "object",
                                "properties": {
                                  "LegalName": {
                                    "description": "Legal Name of the organisation",
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 35
                                  }
                                },
                                "required": ["LegalName"],
                                "additionalProperties": false
                              }
                            },
                            "required": ["OrganisationName"],
                            "additionalProperties": false
                          },
                          "Brand": {
                            "description": "Brand",
                            "type": "object",
                            "properties": {
                              "TrademarkIPOCode": {
                                "description": "The Intellectual Property Office (IPO) is the official body responsible for intellectual property (IP) rights including patents, designs, trademarks and copyright. (Code: UK or EU only)",
                                "type": "string",
                                "enum": ["UK", "EU"]
                              },
                              "TrademarkID": {
                                "description": "The trademark number that has been registered with the Intellectual Property Office. Note: The 2 letter IPO prefix should be omitted",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 35
                              }
                            },
                            "required": ["TrademarkIPOCode", "TrademarkID"],
                            "additionalProperties": false
                          }
                        },
                        "required": ["ParentOrganisation", "Brand"],
                        "additionalProperties": false
                      },
                      "BranchName": {
                        "description": "Name by which a party is known and which is usually used to identify that party",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 35
                      },
                      "BranchIdentification": {
                        "description": "Unique and unambiguous identification of a retail branch of a financial institution",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 35
                      },
                      "BranchType": {
                        "description": "Information on the type of branch",
                        "type": "string",
                        "enum": ["Physical", "Mobile"]
                      },
                      "Address": {
                        "description": "Postal Address",
                        "type": "object",
                        "properties": {
                          "StreetName": {
                            "description": "Name of a street or thoroughfare",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 70
                          },
                          "BuildingNumberOrName": {
                            "description": "Number or Name that identifies the position of a building on a street",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 350
                          },
                          "PostCode": {
                            "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 16
                          },
                          "OptionalAddressField": {
                            "description": "Directions for customers",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 350
                          },
                          "TownName": {
                            "description": "Name of a built-up area, with defined boundaries, and a local government",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 35
                          },
                          "CountrySubDivision": {
                            "description": "Identifies a subdivision of a country such as state, region, county",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 35
                          },
                          "Country": {
                            "description": "Nation with its own government",
                            "type": "string",
                            "pattern": "[A-Z]{2}"
                          }
                        },
                        "required": ["Country"],
                        "additionalProperties": false
                      },
                      "BranchDescription": {
                        "description": "Description of the branch",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 140
                      },
                      "BranchPhoto": {
                        "description": "Image related to the branch",
                        "type": "string",
                        "format": "uri"
                      },
                      "TelephoneNumber": {
                        "description": "Collection of information that identifies a phone number, as defined by telecom services.",
                        "type": "string",
                        "pattern": "^[+][0-9]{1,3}-[0-9()+-]{1,30}$"
                      },
                      "AlternatePhone": {
                        "type": "array",
                        "items": {
                          "description": "Alternative Phone Number",
                          "type": "object",
                          "properties": {
                            "AlternateTelephoneNumber": {
                              "description": "Collection of information that identifies a phone number, as defined by telecom services.",
                              "type": "string",
                              "pattern": "^[+][0-9]{1,3}-[0-9()+-]{1,30}$"
                            },
                            "AlternateTelephoneNumberDescription": {
                              "description": "Description of the telephone number",
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 35
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "FaxNumber": {
                        "description": "Collection of information that identifies a FAX number, as defined by telecom services.",
                        "type": "array",
                        "items": {
                          "description": "Collection of information that identifies a phone number, as defined by telecom services.",
                          "type": "string",
                          "pattern": "^[+][0-9]{1,3}-[0-9()+-]{1,30}$"
                        }
                      },
                      "GeographicLocation": {
                        "description": "Geographic Coordinates",
                        "type": "object",
                        "properties": {
                          "Latitude": {
                            "description": "The Latitude measured in decimal format according to ISO 213",
                            "type": "string",
                            "pattern": "^-?\\d{1,3}\\.\\d{1,8}$"
                          },
                          "Longitude": {
                            "description": "The longitude measured in decimal format according to ISO 213",
                            "type": "string",
                            "pattern": "^-?\\d{1,3}\\.\\d{1,8}$"
                          }
                        },
                        "required": ["Latitude", "Longitude"],
                        "additionalProperties": false
                      },
                      "DaysOfTheWeek": {
                        "description": "Description on when the mobile branch is available. e.g. The weekend of Glastonbury festival; or Mondays and during the shrimp season also Wednesdays",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 35
                      },
                      "StopName": {
                        "description": "Name of the stop of the mobile branch",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 15
                      },
                      "ArrivalTime": {
                        "description": "Time that the mobile branch is scheduled to arrive",
                        "type": "string",
                        "pattern": "^(([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].\\d{3})|(^24:00:00\\.000)(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
                      },
                      "DepartureTime": {
                        "description": "Time that the mobile branch is scheduled to depart",
                        "type": "string",
                        "pattern": "^(([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].\\d{3})|(^24:00:00\\.000)(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
                      },
                      "ParkingLocation": {
                        "description": "Place where the mobile branch is located, such as between the news agent and the church.",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                      },
                      "OpeningTimes": {
                        "description": "Branch Opening Times",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "OpeningDay": {
                              "description": "Day of the week",
                              "enum": ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday", "Public and Bank Holiday"],
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 35
                            },
                            "OpeningTime": {
                              "description": "ISOTime, local time hh:mm:ss.sss or time in utc hh:mm:ss.sssZ or time with timezone hh:mm:ss.sss+hh:mm hh:mm:ss.sss-hh:mm",
                              "type": "string",
                              "pattern": "^(([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].\\d{3})|(^24:00:00\\.000)(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
                            },
                            "ClosingTime": {
                              "description": "ISOTime, local time hh:mm:ss.sss or time in utc hh:mm:ss.sssZ or time with timezone hh:mm:ss.sss+hh:mm hh:mm:ss.sss-hh:mm",
                              "type": "string",
                              "pattern": "^(([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].\\d{3})|(^24:00:00\\.000)(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
                            },
                            "UnavailableStartTime": {
                              "description": "ISOTime, local time hh:mm:ss.sss or time in utc hh:mm:ss.sssZ or time with timezone hh:mm:ss.sss+hh:mm hh:mm:ss.sss-hh:mm",
                              "type": "string",
                              "pattern": "^(([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].\\d{3})|(^24:00:00\\.000)(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
                            },
                            "UnavailableFinishTime": {
                              "description": "ISOTime, local time hh:mm:ss.sss or time in utc hh:mm:ss.sssZ or time with timezone hh:mm:ss.sss+hh:mm hh:mm:ss.sss-hh:mm",
                              "type": "string",
                              "pattern": "^(([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].\\d{3})|(^24:00:00\\.000)(?:Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?$"
                            }
                          },
                          "required": ["OpeningDay", "OpeningTime", "ClosingTime"]
                        },
                        "minItems": 1,
                        "additionalProperties": false
                      },
                      "PlannedBranchClosure": {
                        "type": "array",
                        "items": {
                          "description": "Planned branch closure",
                          "type": "object",
                          "properties": {
                            "StartDate": {
                              "description": "Date when a branch is due to close temporarily or permanently",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "EndDate": {
                              "description": "Date when a branch is due to re-open following temporary closure",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "AccessibilityTypes": {
                        "description": "Information about the accessibility",
                        "type": "string",
                        "enum": ["AudioCashMachine", "AutomaticDoors", "ChairAccess", "DriveThru", "ExternalRamp", "InductionLoop", "InternalRamp", "LevelAccess", "LowerLevelCounter", "WheelchairAccess"]
                      },
                      "BranchSelfServeServiceName": {
                        "type": "array",
                        "items": {
                          "description": "Information about self service branch services",
                          "type": "string",
                          "enum": ["AccountVerificationService", "AssistedServiceCounter", "BusinessDepositTerminal", "CashChequeDepositMachineCoin", "CashChequeDepositMachineNoCoin", "ExternalAtmAudio", "ExternalAtmNoAudio", "ExternalQuickServicePoint", "InternalAtmAudio", "InternalAtmNoAudio", "InternalQuickServicePoint", "LodgementDevice", "OnlineBankingPoint", "QuickDeposit", "SaturdayCounterService", "SelfServiceAccountOpening", "StatementPrinter"]
                        },
                        "uniqueItems": true
                      },
                      "BranchOtherSelfServices": {
                        "description": "Self Services not described in BranchSelfServeServiceName",
                        "type": "array",
                        "items": {
                          "description": "maxLength 350 text",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 350
                        }
                      },
                      "BranchMediatedServiceName": {
                        "description": "Information about mediated branch facilities",
                        "type": "array",
                        "items": {
                          "description": "Information about mediated branch facilities",
                          "type": "string",
                          "enum": ["BureauDeChange", "BusinessCounter", "CardIssuanceFacility", "CounterServices", "DriveThru", "MortgageAdvisor", "NightSafe", "OnDemandCurrency", "PremierCounter", "VideoBanking", "WheelChairAccess"]
                        },
                        "uniqueItems": true
                      },
                      "BranchOtherMediatedServices": {
                        "description": "Mediated Services not described in BranchMediatedServiceName",
                        "type": "array",
                        "items": {
                          "description": "maxLength 350 text",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 350
                        }
                      },
                      "BranchFacilitiesName": {
                        "description": "Information about branch facilities",
                        "type": "array",
                        "items": {
                          "description": "Information about branch facilities",
                          "type": "string",
                          "enum": ["BusinessITSupport", "CollectionLockers", "MeetingRooms", "Parking", "Wifi"]
                        },
                        "uniqueItems": true
                      },
                      "CustomerSegment": {
                        "description": "Customer segment which the branch is able to service",
                        "type": "array",
                        "items": {
                          "description": "Customer segment which the branch is able to service",
                          "type": "string",
                          "enum": ["Business", "Corporate", "Personal", "Premier", "Private", "Select", "SME", "Wealth"]
                        },
                        "uniqueItems": true
                      },
                      "BranchOtherFacilities": {
                        "description": "Any other facilities not mentioned in BranchFacilitiesName",
                        "type": "array",
                        "items": {
                          "description": "maxLength 350 text",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 350
                        }
                      },
                      "ATMAtBranch": {
                        "description": "Indicated whether an ATM is at the branch",
                        "type": "boolean"
                      }
                    },
                    "required": ["Organisation", "BranchIdentification", "BranchType", "CustomerSegment", "Address", "TelephoneNumber", "OpeningTimes", "ATMAtBranch"],
                    "additionalProperties": false
                  }
                }
              },
              "required": ["meta", "data"],
              "additionalProperties": false
            }
          },
          "400": {
            "description": "You have sent a request which could not be understood.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              }
            },
            "schema": {
              "title": "400 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["400"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Bad request"]
                },
                "description": {
                  "type": "string",
                  "enum": ["You have sent a request which could not be understood."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "408": {
            "description": "Your client has failed to submit a request, and a timeout has occurred.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              }
            },
            "schema": {
              "title": "408 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["408"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Client timeout"]
                },
                "description": {
                  "type": "string",
                  "enum": ["Your client has failed to submit a request, and a timeout has occurred."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "429": {
            "description": "You have requested this resource too often. Slow down.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              }
            },
            "schema": {
              "title": "429 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["429"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Too many requests"]
                },
                "description": {
                  "type": "string",
                  "enum": ["You have requested this resource too often. Slow down."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "500": {
            "description": "An error occurred on the server. No further information is available.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              }
            },
            "schema": {
              "title": "500 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["500"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Internal server error"]
                },
                "description": {
                  "type": "string",
                  "enum": ["An error occurred on the server. No further information is available."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "503": {
            "description": "The service is temporarily unavailable.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              }
            },
            "schema": {
              "title": "503 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["503"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Service temporarily unavailable"]
                },
                "description": {
                  "type": "string",
                  "enum": ["The service is temporarily unavailable."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "default": {
            "description": "A standard error response.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              }
            },
            "schema": {
              "title": "Error object",
              "type": "object",
              "properties": {
                "status": {
                  "description": "This corresponds to the HTTP status code",
                  "type": "string"
                },
                "title": {
                  "description": "A short title of the type of error",
                  "type": "string"
                },
                "description": {
                  "description": "Further details describing the error",
                  "type": "string"
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          }
        }
      },
      "head": {
        "tags": ["Branch"],
        "description": "Gets header information on the current set of `Branch` data",
        "parameters": [{
          "name": "If-Modified-Since",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if modified since a given date",
          "in": "header",
          "required": false
        }, {
          "name": "If-None-Match",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "in": "header",
          "required": false
        }],
        "responses": {
          "default": {
            "description": "No response",
            "schema": {
              "title": "No response",
              "type": "object",
              "properties": {}
            }
          }
        }
      }
    },
    "/atms": {
      "get": {
        "tags": ["ATM"],
        "description": "Gets a list of all `ATM` objects.",
        "parameters": [{
          "name": "If-Modified-Since",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if modified since a given date",
          "in": "header",
          "required": false
        }, {
          "name": "If-None-Match",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "in": "header",
          "required": false
        }],
        "responses": {
          "200": {
            "description": "Successful response with a list of `ATM` data",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header",
                "default": "max-age=31536000"
              },
              "Etag": {
                "type": "string",
                "description": "A unique ID identifying whether this resource has changed"
              },
              "Cache-Control": {
                "type": "string",
                "description": "Describes how long this response can be cached",
                "default": "max-age=28800"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "title": "Meta data",
                  "type": "object",
                  "properties": {
                    "LastUpdated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "TotalResults": {
                      "type": "integer"
                    },
                    "Agreement": {
                      "type": "string",
                      "enum": ["Use of the APIs and any related data will be subject to the terms of the Open Licence and subject to terms and conditions"]
                    },
                    "License": {
                      "description": "Open Banking License",
                      "type": "string",
                      "format": "uri",
                      "enum": ["https://www.openbanking.org.uk/open-licence"]
                    },
                    "TermsOfUse": {
                      "description": "Open Banking Terms of Use",
                      "type": "string",
                      "format": "uri",
                      "enum": ["https://www.openbanking.org.uk/terms"]
                    }
                  },
                  "required": ["LastUpdated", "TotalResults", "Agreement", "License", "TermsOfUse"],
                  "additionalProperties": false
                },
                "data": {
                  "type": "array",
                  "items": {
                    "title": "ATM",
                    "type": "object",
                    "properties": {
                      "Organisation": {
                        "description": "Organisation",
                        "type": "object",
                        "properties": {
                          "ParentOrganisation": {
                            "description": "Parent organisation",
                            "type": "object",
                            "properties": {
                              "LEI": {
                                "description": "The LEI ID of the organisation",
                                "type": "string",
                                "pattern": "^[A-Z0-9]{18,18}[0-9]{2,2}$"
                              },
                              "BIC": {
                                "description": "The BIC from the organisation",
                                "type": "string",
                                "pattern": "[A-Z]{6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3})?"
                              },
                              "OrganisationName": {
                                "description": "Organisation Name",
                                "type": "object",
                                "properties": {
                                  "LegalName": {
                                    "description": "Legal Name of the organisation",
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 35
                                  }
                                },
                                "required": ["LegalName"],
                                "additionalProperties": false
                              }
                            },
                            "required": ["OrganisationName"],
                            "additionalProperties": false
                          },
                          "Brand": {
                            "description": "Brand",
                            "type": "object",
                            "properties": {
                              "TrademarkIPOCode": {
                                "description": "The Intellectual Property Office (IPO) is the official body responsible for intellectual property (IP) rights including patents, designs, trademarks and copyright. (Code: UK or EU only)",
                                "type": "string",
                                "enum": ["UK", "EU"]
                              },
                              "TrademarkID": {
                                "description": "The trademark number that has been registered with the Intellectual Property Office. Note: The 2 letter IPO prefix should be omitted",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 35
                              }
                            },
                            "required": ["TrademarkIPOCode", "TrademarkID"],
                            "additionalProperties": false
                          }
                        },
                        "required": ["ParentOrganisation", "Brand"],
                        "additionalProperties": false
                      },
                      "BranchIdentification": {
                        "description": "Unique and unambiguous identification of a retail branch of a financial institution",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 35
                      },
                      "ATMID": {
                        "description": "ATM terminal device identification for the acquirer and the issuer",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 35
                      },
                      "LocationCategory": {
                        "description": "Indicates the environment of the ATM",
                        "type": "string",
                        "enum": ["Airport", "BankSpecialisedOutlet", "BranchExternal", "BranchInternal", "BranchLobby", "BureauDeChange", "CoachStation", "CommercialSpaceInternal", "ConvenienceStore", "ExhibitionCentre", "FactoryOrOffice", "FillingStation", "FinancialInstitution", "GovernmentOffice", "Hospital", "Hotel", "KioskPod", "LeisureCentre", "PleasurePark", "PublicHouse", "RailwayStation", "RemoteUnit", "RetailerDepartmentStore", "RetailerOutlet", "SeaportTerminal", "ServiceStation", "ShoppingCentreExternal", "ShoppingCentreInternal", "StorageDepot", "SupermarketExternal", "SupermarketInternal", "UndergroundRailwayStation", "UniversityOrCollege"]
                      },
                      "SiteID": {
                        "description": "Site identifying code, where ATM is located",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 35
                      },
                      "SiteName": {
                        "description": "Site identifying name, where ATM is located",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 35
                      },
                      "Address": {
                        "description": "Postal Address",
                        "type": "object",
                        "properties": {
                          "StreetName": {
                            "description": "Name of a street or thoroughfare",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 70
                          },
                          "BuildingNumberOrName": {
                            "description": "Number or Name that identifies the position of a building on a street",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 350
                          },
                          "PostCode": {
                            "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 16
                          },
                          "OptionalAddressField": {
                            "description": "Directions for customers",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 350
                          },
                          "TownName": {
                            "description": "Name of a built-up area, with defined boundaries, and a local government",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 35
                          },
                          "CountrySubDivision": {
                            "description": "Identifies a subdivision of a country such as state, region, county",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 35
                          },
                          "Country": {
                            "description": "Nation with its own government",
                            "type": "string",
                            "pattern": "[A-Z]{2}"
                          }
                        },
                        "required": ["StreetName", "PostCode", "Country"],
                        "additionalProperties": false
                      },
                      "GeographicLocation": {
                        "description": "Geographic Coordinates",
                        "type": "object",
                        "properties": {
                          "Latitude": {
                            "description": "The Latitude measured in decimal format according to ISO 213",
                            "type": "string",
                            "pattern": "^-?\\d{1,3}\\.\\d{1,8}$"
                          },
                          "Longitude": {
                            "description": "The longitude measured in decimal format according to ISO 213",
                            "type": "string",
                            "pattern": "^-?\\d{1,3}\\.\\d{1,8}$"
                          }
                        },
                        "required": ["Latitude", "Longitude"],
                        "additionalProperties": false
                      },
                      "AccessibilityTypes": {
                        "description": "Information about the accessibility",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                          "description": "Information about the accessibility",
                          "type": "string",
                          "enum": ["AudioCashMachine", "AutomaticDoors", "ChairAccess", "DriveThru", "ExternalRamp", "InductionLoop", "InternalRamp", "LevelAccess", "LowerLevelCounter", "WheelchairAccess"]
                        }
                      },
                      "SupportedLanguages": {
                        "description": "Languages that the ATM supports",
                        "type": "array",
                        "items": {
                          "description": "must be ISO 693-2 codes",
                          "type": "string"
                        },
                        "minItems": 1
                      },
                      "ATMServices": {
                        "description": "Information about ATM services",
                        "type": "array",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                          "description": "Information about ATM services",
                          "type": "string",
                          "enum": ["Balance", "BillPayments", "CashDeposits", "CashWithdrawal", "CharityDonation", "ChequeBookRequest", "ChequeDeposits", "FastCash", "MiniStatement", "MobileBankingRegistration", "MobilePaymentRegistration", "MobilePhoneTopUp", "OrderStatement", "PINActivation", "PINChange"]
                        }
                      },
                      "AdditionalATMServices": {
                        "description": "ATM Service Description",
                        "type": "array",
                        "items": {
                          "description": "maxLength 350 text",
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 350
                        }
                      },
                      "Currency": {
                        "description": "Defines currency type available for dispense",
                        "type": "array",
                        "uniqueItems": true,
                        "minItems": 1,
                        "items": {
                          "description": "Active or Historic Currency Code",
                          "type": "string",
                          "pattern": "[A-Z]{3}"
                        }
                      },
                      "MinimumValueDispensed": {
                        "description": "Minimum currency denominations usually available",
                        "type": "string",
                        "enum": ["£5", "£10", "£20", "£50", "£100"]
                      }
                    },
                    "required": ["Organisation", "ATMID", "Address", "GeographicLocation", "SupportedLanguages", "ATMServices", "Currency"],
                    "additionalProperties": false
                  }
                }
              },
              "required": ["meta", "data"],
              "additionalProperties": false
            }
          },
          "400": {
            "description": "You have sent a request which could not be understood.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              }
            },
            "schema": {
              "title": "400 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["400"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Bad request"]
                },
                "description": {
                  "type": "string",
                  "enum": ["You have sent a request which could not be understood."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "408": {
            "description": "Your client has failed to submit a request, and a timeout has occurred.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "408 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["408"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Client timeout"]
                },
                "description": {
                  "type": "string",
                  "enum": ["Your client has failed to submit a request, and a timeout has occurred."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "429": {
            "description": "You have requested this resource too often. Slow down.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "429 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["429"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Too many requests"]
                },
                "description": {
                  "type": "string",
                  "enum": ["You have requested this resource too often. Slow down."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "500": {
            "description": "An error occurred on the server. No further information is available.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "500 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["500"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Internal server error"]
                },
                "description": {
                  "type": "string",
                  "enum": ["An error occurred on the server. No further information is available."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "503": {
            "description": "The service is temporarily unavailable.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "503 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["503"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Service temporarily unavailable"]
                },
                "description": {
                  "type": "string",
                  "enum": ["The service is temporarily unavailable."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "default": {
            "description": "A standard error response.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "Error object",
              "type": "object",
              "properties": {
                "status": {
                  "description": "This corresponds to the HTTP status code",
                  "type": "string"
                },
                "title": {
                  "description": "A short title of the type of error",
                  "type": "string"
                },
                "description": {
                  "description": "Further details describing the error",
                  "type": "string"
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          }
        }
      },
      "head": {
        "tags": ["ATM"],
        "description": "Gets header information on the current set of `ATM` data",
        "parameters": [{
          "name": "If-Modified-Since",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if modified since a given date",
          "in": "header",
          "required": false
        }, {
          "name": "If-None-Match",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "in": "header",
          "required": false
        }],
        "responses": {
          "default": {
            "description": "No response",
            "schema": {
              "title": "No response",
              "type": "object",
              "properties": {}
            }
          }
        }
      }
    },
    "/personal-current-accounts": {
      "get": {
        "tags": ["PCA"],
        "description": "Gets a list of all `Personal Current Account` objects.",
        "parameters": [{
          "name": "If-Modified-Since",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if modified since a given date",
          "in": "header",
          "required": false
        }, {
          "name": "If-None-Match",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "in": "header",
          "required": false
        }],
        "responses": {
          "200": {
            "description": "Successful response with a list of `Personal Current Account` data",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header",
                "default": "max-age=31536000"
              },
              "Etag": {
                "type": "string",
                "description": "A unique ID identifying whether this resource has changed"
              },
              "Cache-Control": {
                "type": "string",
                "description": "Describes how long this response can be cached",
                "default": "max-age=28800"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "title": "Meta data",
                  "type": "object",
                  "properties": {
                    "LastUpdated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "TotalResults": {
                      "type": "integer"
                    },
                    "Agreement": {
                      "type": "string",
                      "enum": ["Use of the APIs and any related data will be subject to the terms of the Open Licence and subject to terms and conditions"]
                    },
                    "License": {
                      "description": "Open Banking License",
                      "type": "string",
                      "format": "uri",
                      "enum": ["https://www.openbanking.org.uk/open-licence"]
                    },
                    "TermsOfUse": {
                      "description": "Open Banking Terms of Use",
                      "type": "string",
                      "format": "uri",
                      "enum": ["https://www.openbanking.org.uk/terms"]
                    }
                  },
                  "required": ["LastUpdated", "TotalResults", "Agreement", "License", "TermsOfUse"],
                  "additionalProperties": false
                },
                "data": {
                  "type": "array",
                  "items": {
                    "description": "Personal Current Account",
                    "type": "object",
                    "properties": {
                      "Organisation": {
                        "description": "Organisation",
                        "type": "object",
                        "properties": {
                          "ParentOrganisation": {
                            "description": "Parent organisation",
                            "type": "object",
                            "properties": {
                              "LEI": {
                                "description": "The LEI ID of the organisation",
                                "type": "string",
                                "pattern": "^[A-Z0-9]{18,18}[0-9]{2,2}$"
                              },
                              "BIC": {
                                "description": "The BIC from the organisation",
                                "type": "string",
                                "pattern": "[A-Z]{6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3})?"
                              },
                              "OrganisationName": {
                                "description": "Organisation Name",
                                "type": "object",
                                "properties": {
                                  "LegalName": {
                                    "description": "Legal Name of the organisation",
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 35
                                  }
                                },
                                "required": ["LegalName"],
                                "additionalProperties": false
                              }
                            },
                            "required": ["OrganisationName"],
                            "additionalProperties": false
                          },
                          "Brand": {
                            "description": "Brand",
                            "type": "object",
                            "properties": {
                              "TrademarkIPOCode": {
                                "description": "The Intellectual Property Office (IPO) is the official body responsible for intellectual property (IP) rights including patents, designs, trademarks and copyright. (Code: UK or EU only)",
                                "type": "string",
                                "enum": ["UK", "EU"]
                              },
                              "TrademarkID": {
                                "description": "The trademark number that has been registered with the Intellectual Property Office. Note: The 2 letter IPO prefix should be omitted",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 35
                              }
                            },
                            "required": ["TrademarkIPOCode", "TrademarkID"],
                            "additionalProperties": false
                          }
                        },
                        "required": ["ParentOrganisation", "Brand"],
                        "additionalProperties": false
                      },
                      "ProductType": {
                        "description": "Descriptive code for the product category",
                        "type": "string",
                        "enum": ["PCA"]
                      },
                      "ProductName": {
                        "description": "The name of the product used for marketing purposes from a customer perspective. i.e. what the customer would recognise",
                        "type": "string"
                      },
                      "ProductSegment": {
                        "type": "array",
                        "items": {
                          "description": "Marketing or industry segment that the product is designed for",
                          "type": "string",
                          "enum": ["Basic", "Business", "General", "Graduate", "International", "Packaged", "Personal", "Premium", "Reward", "SME", "Student", "YoungAdult", "Youth"]
                        },
                        "minItems": 1
                      },
                      "InternationalPaymentsSupported": {
                        "description": "Indicates that the account supports international payments",
                        "type": "boolean"
                      },
                      "ProductIdentifier": {
                        "description": "Identifier within the parent organisation for the product. Must be unique in the organisation",
                        "type": "string"
                      },
                      "CardWithdrawalLimit": {
                        "description": "The daily Limit that a customer can get via the ATM. This describes the default limit rather than the maximum",
                        "type": "string",
                        "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                      },
                      "ProductDescription": {
                        "description": "Description of the product provided by the parent organisation",
                        "type": "string"
                      },
                      "TsandCs": {
                        "description": "URL provided by the parent organisation which redirects to the current T&Cs",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1
                      },
                      "AccessChannels": {
                        "description": "Ways to interact with the bank when managing account",
                        "type": "array",
                        "items": {
                          "description": "Channel",
                          "type": "string",
                          "enum": ["ATM", "Branch", "BusinessCommercialCentre", "CallCentre", "MobileApps", "MobileBanking", "Online", "Phone", "Post", "PostOffice", "RelationshipManager", "Text"]
                        },
                        "minItems": 1
                      },
                      "CardType": {
                        "description": "Card Type available",
                        "type": "array",
                        "items": {
                          "description": "Indicates the card scheme",
                          "type": "string",
                          "enum": ["BasicCard", "BusinessQuickLodgeCard", "Cashcard", "ContactlessCashcard", "ContactlessDebitMastercard", "ContactlessDebitVisa", "DebitMastercard", "VisaDebit", "DepositCard", "OperatorCard", "POCACard"]
                        },
                        "minItems": 1
                      },
                      "Contactless": {
                        "description": "Does the card issued have contactless facility",
                        "type": "boolean"
                      },
                      "MobileWallet": {
                        "description": "Mobile wallet supported by this product. A mobile wallet being any electronic device that allows an individual to make electronic commerce transactions",
                        "type": "array",
                        "items": {
                          "description": "Mobile wallet supported by this product. A mobile wallet being any electronic device that allows an individual to make electronic commerce transactions",
                          "type": "string",
                          "enum": ["AndroidPay", "ApplePay", "IssuerMobileApp", "MobileBankingApp", "Other", "PayM", "SamsungPay", "VodafoneWallet"]
                        }
                      },
                      "CardNotes": {
                        "description": "Optional additional notes to supplement the card details",
                        "type": "string"
                      },
                      "ChequeBookAvailable": {
                        "description": "Can a chequebook be issued",
                        "type": "boolean"
                      },
                      "CreditScoringPartOfAccountOpeningForGettingAnAccount": {
                        "description": "Indicates whether a credit check performed on an inquiry to open an account is submitted",
                        "type": "boolean"
                      },
                      "CreditScoringPartOfAccountOpeningIsAHardOrSoftCreditScore": {
                        "description": "Describes the type of credit scoring",
                        "type": "array",
                        "items": {
                          "description": "Indicates the type of scoring",
                          "type": "string",
                          "enum": ["Hard", "Soft"]
                        }
                      },
                      "CreditScoringPartOfAccountOpeningText": {
                        "description": "Details on the specific credit scoring",
                        "type": "string"
                      },
                      "CreditScoringPartOfAccountOpeningForIDVerification": {
                        "description": "Indicates whether a credit check is used to check the address of a potential new account holder",
                        "type": "boolean"
                      },
                      "CreditScoringPartOfAccountOpeningIDVerificationIsAHardOrSoftCreditScore": {
                        "type": "array",
                        "items": {
                          "description": "Indicates the type of scoring",
                          "type": "string",
                          "enum": ["Hard", "Soft"]
                        }
                      },
                      "CreditScoringPartOfAccountOpeningIDVerificationText": {
                        "description": "Details on the specific credit scoring",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "MaximumMonthlyCharge": {
                        "description": "The maximum Relevant Charges that could accrue",
                        "type": "string",
                        "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                      },
                      "ProductURL": {
                        "description": "URL provided by the organisation which redirects to the product (on live products only). There might be more than one product at a given URL",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uri"
                        },
                        "minItems": 1
                      },
                      "Currency": {
                        "description": "Currency of the Account. Default to GBP at present",
                        "type": "array",
                        "items": {
                          "description": "Active or Historic Currency Code",
                          "type": "string",
                          "pattern": "[A-Z]{3}"
                        },
                        "minItems": 1
                      },
                      "OverdraftOffered": {
                        "description": "Indicates whether an overdraft offered for this account",
                        "type": "boolean"
                      },
                      "Feature": {
                        "type": "array",
                        "items": {
                          "description": "Account Features",
                          "type": "object",
                          "properties": {
                            "ExistingFeature": {
                              "description": "Indicates whether the account has any feature",
                              "type": "boolean"
                            },
                            "ProductState": {
                              "description": "Describes if the offering is promotional or a description of a future state.",
                              "type": "string",
                              "enum": ["FutureMultipleTerms", "Promotional", "Regular"]
                            },
                            "StartPromotionOrFutureTerms": {
                              "description": "Describes the start date",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "StopPromotionOrFutureTerms": {
                              "description": "Describes the end date",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "LengthPromotionalInDays": {
                              "description": "Describes the length if only a duration is given instead of a date",
                              "type": "integer"
                            },
                            "DateOfChange": {
                              "description": "Date of the change if it refers to future terms",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "FeatureDetails": {
                              "description": "Feature details",
                              "type": "array",
                              "items": {
                                "description": "Feature Details",
                                "type": "object",
                                "properties": {
                                  "FeatureSubType": {
                                    "description": "",
                                    "type": "string",
                                    "enum": ["FutureMultipleTerms", "Promotional", "Regular"]
                                  },
                                  "StartPromotionOrFutureTerms": {
                                    "description": "Describes the start date",
                                    "type": "string",
                                    "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                  },
                                  "StopPromotionOrFutureTerms": {
                                    "description": "Describes the end date",
                                    "type": "string",
                                    "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                  },
                                  "LengthPromotionalInDays": {
                                    "description": "Describes the length if only a duration is given instead of a date",
                                    "type": "integer"
                                  },
                                  "DateOfChange": {
                                    "description": "Date of the change if it refers to future terms",
                                    "type": "string",
                                    "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                  },
                                  "FeatureType": {
                                    "description": "Type that represents the nature of the feature",
                                    "type": "string"
                                  },
                                  "FeatureName": {
                                    "description": "The name of the feature",
                                    "type": "string"
                                  },
                                  "FeatureDescription": {
                                    "description": "A textual explanation of what the feature",
                                    "type": "string"
                                  },
                                  "FeatureValue": {
                                    "description": "The value or values permissible for a specific feature for an individual product representing a product characteristic",
                                    "type": "string"
                                  },
                                  "CriteriaType": {
                                    "description": "Criteria that is required in order to be eligible for the feature",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": ["ExistingFeature"]
                        }
                      },
                      "CAPricing": {
                        "type": "array",
                        "items": {
                          "description": "Card Price",
                          "type": "object",
                          "properties": {
                            "ProductState": {
                              "description": "Describes if the offering is promotional or a description of a future state.",
                              "type": "string",
                              "enum": ["FutureMultipleTerms", "Promotional", "Regular"]
                            },
                            "CAPricingItem": {
                              "description": "Card Pricing",
                              "type": "object",
                              "properties": {
                                "StartPromotionOrFutureTerms": {
                                  "description": "Describes the start date",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "StopPromotionOrFutureTerms": {
                                  "description": "Describes the end date",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "LengthPromotionalInDays": {
                                  "description": "Describes the length if only a duration is given instead of a date",
                                  "type": "integer"
                                },
                                "DateOfChange": {
                                  "description": "Date of the change if it refers to future terms",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "ExchangeRateAdjustment": {
                                  "description": "The margin added, by certain card issuers, to the scheme rate in order to arrive at the exchange rate qouted as the reference exchange rate to the cardholder",
                                  "type": "string",
                                  "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "required": ["ProductState", "CAPricingItem"],
                          "additionalProperties": false
                        },
                        "minItems": 1
                      },
                      "Eligibility": {
                        "description": "Eligibility",
                        "type": "object",
                        "properties": {
                          "AgeRestricted": {
                            "description": "Indicates a customer's age is part of eligibility criteria",
                            "type": "boolean"
                          },
                          "MinimumAge": {
                            "description": "Minimum age, in years, required to hold an account",
                            "type": "integer"
                          },
                          "MaximumAge": {
                            "description": "Maximum age, in years, allowed to hold the account",
                            "type": "integer"
                          },
                          "MaximumAgeToOpen": {
                            "description": "Maximum age, in years, to open an account",
                            "type": "integer"
                          },
                          "OtherFinancialHoldingRequired": {
                            "description": "Indicates that it is necessary to hold another product with the bank in order to be eligible for this product or feature",
                            "type": "boolean"
                          },
                          "Description": {
                            "description": "One paragraph detailing the eligibility",
                            "type": "string"
                          },
                          "IncomeTurnoverRelated": {
                            "description": "Indicates if eligibility linked to income",
                            "type": "boolean"
                          },
                          "SingleJointIncome": {
                            "description": "Minimum Income Source. For certain products a minimum income is required. This can be mandated as to the single income or to a joint income. This field describes this",
                            "type": "string",
                            "enum": ["Joint", "SoleIncome", "SoleOrJoint", "Turnover"]
                          },
                          "MinimumIncomeTurnoverAmount": {
                            "description": "Minimum income / Turnover required to hold the product",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "MinimumIncomeTurnoverCurrency": {
                            "description": "Minimum income / Turnover Currency",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "IncomeCondition": {
                            "description": "Stipulates any particular definition of income that applies to the income eligibility and/or method by which income must paid into the account (eg Salary DD)",
                            "type": "string"
                          },
                          "MinIncomeTurnoverPaidIntoAccount": {
                            "description": "Minimum Income Amount required to paid into the account",
                            "type": "integer"
                          },
                          "MinimumIncomeFrequency": {
                            "description": "The frequency that the minimum mentioned before is deposited in the account. Yearly is very important for premium accounts",
                            "type": "string",
                            "enum": ["AcademicTerm", "HalfYearly", "Monthly", "Quarterly", "Weekly", "Yearly"]
                          },
                          "AnnualBusinessTurnover": {
                            "description": "Annual Business Turnover",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "AnnualBusinessTurnoverCurrency": {
                            "description": "Annual Business Turnover Currency",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "ResidencyRestricted": {
                            "description": "Indicates a customer's residency forms part of the eligibility criteria",
                            "type": "boolean"
                          },
                          "ResidencyRestrictedRegion": {
                            "description": "Indicates a customer must be current resident of a geographic area/country",
                            "type": "string",
                            "enum": ["UK", "EEA", "EU", "EFTA", "GB - ENG", "GB - NIR", "GB - SCT", "GB - WLS", "IRL"]
                          },
                          "MaxNumberOfAccounts": {
                            "description": "Maximum number of the same prodcut the customer may hold",
                            "type": "string"
                          },
                          "ThirdSectorOrganisations": {
                            "description": "Is the product available to operate as a Clubs or Societies account?",
                            "type": "boolean"
                          },
                          "MinimumDeposit": {
                            "description": "A minimum deposit required to hold this account",
                            "type": "boolean"
                          },
                          "OpeningDepositMinimum": {
                            "description": "Minimum Amount to be held on account",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "OpeningDepositMinimumCurrency": {
                            "description": "The currency of the Minimum Amount to be depositing at opening",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "MinimumOperatingBalanceExists": {
                            "description": "Is there a Minimum Operating Balance?",
                            "type": "boolean"
                          },
                          "MinimumOperatingBalance": {
                            "description": "Minimum Operating Balance",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "MinimumOperatingBalanceCurrency": {
                            "description": "Minimum Operating Balance currency",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "MaximumOpeningAmount": {
                            "description": "A maximum amount to be deposited at opening",
                            "type": "boolean"
                          },
                          "OpeningDepositMaximumAmount": {
                            "description": "Maximum Amount to be depositing at opening",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "OpeningDepositMaximumCurrency": {
                            "description": "The currency of the Minimum Amount to be depositing at opening",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "EligibilityName": {
                            "description": "Free text description, denotes non standard eligibilities not included in the code list",
                            "type": "string"
                          },
                          "EligibilityType": {
                            "description": "Eligibility type",
                            "type": "string",
                            "enum": ["AnyBusinessCustomer", "BusinessOnly", "CreditCard", "CreditScoring", "EmailAddress", "ExistingCustomers", "IdAndV", "Mortgage", "NoArrearsOnLoan", "NoCustomerInArrears", "NoOverOverdraftThirtyDays", "NoSoleUkAccountOrBankrupt", "NTB", "NTBBusiness", "SoleStudentAccount", "SoleUkAccount", "StudentsOnly", "TwoMonthsOfCourseStart", "UCASFulltimeTwoYears"]
                          },
                          "EligibilityNotes": {
                            "description": "Optional additional notes to supplement the eligibility conditions. Only used for very specific conditions",
                            "type": "string"
                          },
                          "PreviousBankruptcy": {
                            "description": "Describes if a previous bankruptcy / insolvency disqualfies for this account Details in ELI-280",
                            "type": "boolean"
                          },
                          "MarketingEligibility": {
                            "type": "array",
                            "items": {
                              "description": "Specific eligibility for marketing",
                              "type": "string",
                              "enum": ["ExistingCustomers", "NewCustomersOnly", "SwitchersOnly", "StartUp"]
                            },
                            "uniqueItems": true
                          }
                        },
                        "required": ["AgeRestricted", "OtherFinancialHoldingRequired", "Description", "IncomeTurnoverRelated", "ResidencyRestricted", "ThirdSectorOrganisations", "PreviousBankruptcy"],
                        "additionalProperties": false
                      },
                      "CreditInterest": {
                        "description": "Credit Interest",
                        "type": "object",
                        "properties": {
                          "CreditCharged": {
                            "description": "Is credit paid to the account. The answer will be the condition of all other fields to be filled",
                            "type": "boolean"
                          },
                          "CreditInterestGroup": {
                            "type": "array",
                            "items": {
                              "description": "Credit Interest Group",
                              "type": "object",
                              "properties": {
                                "InterestTierSubType": {
                                  "description": "Describes if the offering is promotional, regular or a description of a future state",
                                  "type": "string",
                                  "enum": ["FutureMultipleTerms", "Promotional", "Regular"]
                                },
                                "CreditInterestItem": {
                                  "description": "Credit Interest item",
                                  "type": "object",
                                  "properties": {
                                    "StartPromotionOrFutureTerms": {
                                      "description": "Describes the start date",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "StopPromotionOrFutureTerms": {
                                      "description": "Describes the end date",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "LengthPromotionalInDays": {
                                      "description": "Describes the length if only a duration is given instead of a date",
                                      "type": "integer"
                                    },
                                    "DateOfChange": {
                                      "description": "Date of the change if it refers to future terms",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "StartDate": {
                                      "description": "If interest is charged on a specific date range as start date (often used for promotion)",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "EndDate": {
                                      "description": "If interest is charged on a specific date range as end date (often used for promotion)",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "CalculationFrequency": {
                                      "description": "How often is interest applied to account",
                                      "type": "string",
                                      "enum": ["Daily", "Weekly", "Monthly", "Quarterly", "Half-Yearly", "Yearly", "Overnight"]
                                    },
                                    "PaymentMethod": {
                                      "description": "Credit Interest Payment Method Code",
                                      "type": "string",
                                      "enum": ["Compound", "PayAway", "SelfCredit", "SimpleInterest"]
                                    },
                                    "InterestRateType": {
                                      "description": "Credit Interest Payment Rate Type",
                                      "type": "string",
                                      "enum": ["Fixed", "Variable"]
                                    },
                                    "FixedInterestLength": {
                                      "description": "Fixed interest length in days",
                                      "type": "integer"
                                    },
                                    "CalculationMethod": {
                                      "description": "Method for interest calculation",
                                      "type": "string",
                                      "enum": ["Banded", "Tiered", "Whole"]
                                    },
                                    "InterestTiers": {
                                      "type": "array",
                                      "items": {
                                        "description": "Credit Interest Tiers",
                                        "type": "object",
                                        "properties": {
                                          "InterestTier": {
                                            "description": "Identifier for the tier",
                                            "type": "string"
                                          },
                                          "TierValueMinimum": {
                                            "description": "Lower value of interest tier",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                          },
                                          "DailyChargeForMinimum": {
                                            "description": "Special charge on tiered overdraft",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                          },
                                          "TierValueMaximum": {
                                            "description": "Max Value of interst tier",
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 15
                                          },
                                          "DailyChargeForMaximum": {
                                            "description": "Special charge on tiered overdraft",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                          },
                                          "Rate": {
                                            "description": "Rate being paid by the bank (gross)",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                          },
                                          "RateComparisonType": {
                                            "description": "Rate Comparison Type",
                                            "type": "string",
                                            "enum": ["APR", "AER", "Gross", "Net", "RepApr"]
                                          },
                                          "APRAERRate": {
                                            "description": "AER or APR Rate for comparison",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "InterestNotes": {
                                      "description": "Additional notes to supplement the interest details",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "required": ["CreditInterestItem"],
                              "additionalProperties": false
                            }
                          }
                        },
                        "required": ["CreditCharged"],
                        "additionalProperties": false
                      },
                      "Overdraft": {
                        "type": "array",
                        "items": {
                          "description": "Overdraft",
                          "type": "object",
                          "properties": {
                            "OverdraftProductState": {
                              "description": "Describes if the offering is promotional or a description of a future state.",
                              "type": "string",
                              "enum": ["FutureMultipleTerms", "Promotional", "Regular"]
                            },
                            "StartPromotionOrFutureTerms": {
                              "description": "Describes the start date",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "StopPromotionOrFutureTerms": {
                              "description": "Describes the end date",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "LengthPromotionalInDays": {
                              "description": "Describes the length if only a duration is given instead of a date",
                              "type": "integer"
                            },
                            "DateOfChange": {
                              "description": "Date of the change if it refers to future terms",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "OverdraftTierBandSet": {
                              "description": "Overdraft Tier Band Set",
                              "type": "array",
                              "items": {
                                "description": "Tier Bandset",
                                "type": "object",
                                "properties": {
                                  "CMADefinedIndicator": {
                                    "description": "describes that the tiers and bands are set by the CMA order, as opposed to be set by the banks",
                                    "type": "boolean"
                                  },
                                  "ArrangementType": {
                                    "description": "Defines the arrangement of the overdraft",
                                    "type": "string",
                                    "enum": ["Unarranged", "Arranged", "Other"]
                                  },
                                  "ArrangementOtherType": {
                                    "description": "Other Code Type",
                                    "type": "object",
                                    "properties": {
                                      "Code": {
                                        "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                        "type": "string",
                                        "minLength": 4,
                                        "maxLength": 4
                                      },
                                      "Name": {
                                        "description": "Name of 'Other' code set value applicable to specified attribute",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 256
                                      },
                                      "Description": {
                                        "description": "Description for 'Other' code set value applicable to specified attribute",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "TierBandSetIdentification": {
                                    "description": "Identification of the set of tiers or bands",
                                    "type": "string"
                                  },
                                  "EAR": {
                                    "description": "EAR of the Overdraft Set",
                                    "type": "string",
                                    "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                  },
                                  "FeesAndCharges": {
                                    "description": "Type of fee or charge",
                                    "type": "array",
                                    "items": {
                                      "description": "Overdraft Fees Charges",
                                      "type": "object",
                                      "properties": {
                                        "FeeChargeType": {
                                          "description": "Type of fee or charge",
                                          "type": "string",
                                          "enum": ["Periodic", "Minimum", "Maximum", "Setup", "Review", "Renewal", "MinimumSetup", "MaximumSetup", "Total", "Item", "EmergencyLending", "Other"]
                                        },
                                        "FeeChargeOtherType": {
                                          "description": "Other Code Type",
                                          "type": "object",
                                          "properties": {
                                            "Code": {
                                              "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                              "type": "string",
                                              "minLength": 4,
                                              "maxLength": 4
                                            },
                                            "Name": {
                                              "description": "Name of 'Other' code set value applicable to specified attribute",
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 256
                                            },
                                            "Description": {
                                              "description": "Description for 'Other' code set value applicable to specified attribute",
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "FeeChargeAmount": {
                                          "description": "Charge applied to tier",
                                          "type": "string",
                                          "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                        },
                                        "FeeChargeRate": {
                                          "description": "Fee charge rate applied to tier",
                                          "type": "string",
                                          "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                        },
                                        "FeeChargeRateType": {
                                          "description": "Rate type other than EAR",
                                          "type": "string",
                                          "enum": ["Gross", "Net", "Other"]
                                        },
                                        "FeeChargeRateOtherType": {
                                          "description": "Other Code Type",
                                          "type": "object",
                                          "properties": {
                                            "Code": {
                                              "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                              "type": "string",
                                              "minLength": 4,
                                              "maxLength": 4
                                            },
                                            "Name": {
                                              "description": "Name of 'Other' code set value applicable to specified attribute",
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 256
                                            },
                                            "Description": {
                                              "description": "Description for 'Other' code set value applicable to specified attribute",
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "FeeChargeApplicationFrequency": {
                                          "description": "Frequency with which the rate, or amount is charged",
                                          "type": "string",
                                          "enum": ["AcademicTerm", "Daily", "Weekly", "Monthly", "Quarterly", "Half-Yearly", "Yearly", "Overnight", "Other"]
                                        },
                                        "FeeChargeOtherApplicationFrequency": {
                                          "description": "Other Code Type",
                                          "type": "object",
                                          "properties": {
                                            "Code": {
                                              "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                              "type": "string",
                                              "minLength": 4,
                                              "maxLength": 4
                                            },
                                            "Name": {
                                              "description": "Name of 'Other' code set value applicable to specified attribute",
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 256
                                            },
                                            "Description": {
                                              "description": "Description for 'Other' code set value applicable to specified attribute",
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "FeeChargeCalculationFrequency": {
                                          "description": "Frequency with which the rate, or amount is calculated",
                                          "type": "string",
                                          "enum": ["AcademicTerm", "Daily", "Weekly", "Monthly", "Quarterly", "Half-Yearly", "Yearly", "Overnight", "Other"]
                                        },
                                        "FeeChargeOtherCalculationFrequency": {
                                          "description": "Other Code Type",
                                          "type": "object",
                                          "properties": {
                                            "Code": {
                                              "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                              "type": "string",
                                              "minLength": 4,
                                              "maxLength": 4
                                            },
                                            "Name": {
                                              "description": "Name of 'Other' code set value applicable to specified attribute",
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 256
                                            },
                                            "Description": {
                                              "description": "Description for 'Other' code set value applicable to specified attribute",
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "required": ["FeeChargeType"],
                                      "additionalProperties": false
                                    }
                                  },
                                  "BufferAmount": {
                                    "description": "Amount on overdraft that is prearranged",
                                    "type": "string",
                                    "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                  },
                                  "OverdraftTierBand": {
                                    "type": "array",
                                    "items": {
                                      "description": "Tiers",
                                      "type": "object",
                                      "properties": {
                                        "TierBandIdentification": {
                                          "description": "Identification of the tier or band",
                                          "type": "string"
                                        },
                                        "TierValueMinimum": {
                                          "description": "Minimum value of the tier",
                                          "type": "string",
                                          "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                        },
                                        "TierValueMaximum": {
                                          "description": "Maximum value of the tier",
                                          "type": "string",
                                          "minLength": 1,
                                          "maxLength": 15
                                        },
                                        "EAR": {
                                          "description": "EAR of the Tier",
                                          "type": "string",
                                          "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                        },
                                        "FeesAndCharges": {
                                          "type": "array",
                                          "items": {
                                            "description": "Overdraft Fees Charges",
                                            "type": "object",
                                            "properties": {
                                              "FeeChargeType": {
                                                "description": "Type of fee or charge",
                                                "type": "string",
                                                "enum": ["Periodic", "Minimum", "Maximum", "Setup", "Review", "Renewal", "MinimumSetup", "MaximumSetup", "Total", "Item", "EmergencyLending", "Other"]
                                              },
                                              "FeeChargeOtherType": {
                                                "description": "Other Code Type",
                                                "type": "object",
                                                "properties": {
                                                  "Code": {
                                                    "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                                    "type": "string",
                                                    "minLength": 4,
                                                    "maxLength": 4
                                                  },
                                                  "Name": {
                                                    "description": "Name of 'Other' code set value applicable to specified attribute",
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "maxLength": 256
                                                  },
                                                  "Description": {
                                                    "description": "Description for 'Other' code set value applicable to specified attribute",
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "FeeChargeAmount": {
                                                "description": "Charge applied to tier",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                              },
                                              "FeeChargeRate": {
                                                "description": "Fee charge rate applied to tier",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                              },
                                              "FeeChargeRateType": {
                                                "description": "Rate type other than EAR",
                                                "type": "string",
                                                "enum": ["Gross", "Net", "Other"]
                                              },
                                              "FeeChargeRateOtherType": {
                                                "description": "Other Code Type",
                                                "type": "object",
                                                "properties": {
                                                  "Code": {
                                                    "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                                    "type": "string",
                                                    "minLength": 4,
                                                    "maxLength": 4
                                                  },
                                                  "Name": {
                                                    "description": "Name of 'Other' code set value applicable to specified attribute",
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "maxLength": 256
                                                  },
                                                  "Description": {
                                                    "description": "Description for 'Other' code set value applicable to specified attribute",
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "FeeChargeApplicationFrequency": {
                                                "description": "Frequency with which the rate, or amount is charged",
                                                "type": "string",
                                                "enum": ["AcademicTerm", "Daily", "Weekly", "Monthly", "Quarterly", "Half-Yearly", "Yearly", "Overnight", "Other"]
                                              },
                                              "FeeChargeOtherApplicationFrequency": {
                                                "description": "Other Code Type",
                                                "type": "object",
                                                "properties": {
                                                  "Code": {
                                                    "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                                    "type": "string",
                                                    "minLength": 4,
                                                    "maxLength": 4
                                                  },
                                                  "Name": {
                                                    "description": "Name of 'Other' code set value applicable to specified attribute",
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "maxLength": 256
                                                  },
                                                  "Description": {
                                                    "description": "Description for 'Other' code set value applicable to specified attribute",
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "FeeChargeCalculationFrequency": {
                                                "description": "Frequency with which the rate, or amount is calculated",
                                                "type": "string",
                                                "enum": ["AcademicTerm", "Daily", "Weekly", "Monthly", "Quarterly", "Half-Yearly", "Yearly", "Overnight", "Other"]
                                              },
                                              "FeeChargeOtherCalculationFrequency": {
                                                "description": "Other Code Type",
                                                "type": "object",
                                                "properties": {
                                                  "Code": {
                                                    "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                                    "type": "string",
                                                    "minLength": 4,
                                                    "maxLength": 4
                                                  },
                                                  "Name": {
                                                    "description": "Name of 'Other' code set value applicable to specified attribute",
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "maxLength": 256
                                                  },
                                                  "Description": {
                                                    "description": "Description for 'Other' code set value applicable to specified attribute",
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "required": ["FeeChargeType"],
                                            "additionalProperties": false
                                          },
                                          "uniqueItems": true
                                        },
                                        "Notes": {
                                          "description": "Notes on the Overdraft",
                                          "type": "string"
                                        }
                                      },
                                      "required": ["TierValueMinimum", "TierValueMaximum"],
                                      "additionalProperties": false
                                    }
                                  },
                                  "Notes": {
                                    "description": "Notes on the Overdraft",
                                    "type": "string"
                                  }
                                },
                                "required": ["CMADefinedIndicator", "ArrangementType"],
                                "additionalProperties": false
                              }
                            },
                            "FeeChargeNegotiableIndicator": {
                              "description": "Fee Charge negotiable Indicator",
                              "type": "string",
                              "enum": ["No", "Yes"]
                            },
                            "FeesAndCharges": {
                              "type": "array",
                              "items": {
                                "description": "Overdraft Fees Charges",
                                "type": "object",
                                "properties": {
                                  "FeeChargeType": {
                                    "description": "Type of fee or charge",
                                    "type": "string",
                                    "enum": ["Periodic", "Minimum", "Maximum", "Setup", "Review", "Renewal", "MinimumSetup", "MaximumSetup", "Total", "Item", "EmergencyLending", "Other"]
                                  },
                                  "FeeChargeOtherType": {
                                    "description": "Other Code Type",
                                    "type": "object",
                                    "properties": {
                                      "Code": {
                                        "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                        "type": "string",
                                        "minLength": 4,
                                        "maxLength": 4
                                      },
                                      "Name": {
                                        "description": "Name of 'Other' code set value applicable to specified attribute",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 256
                                      },
                                      "Description": {
                                        "description": "Description for 'Other' code set value applicable to specified attribute",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "FeeChargeAmount": {
                                    "description": "Charge applied to tier",
                                    "type": "string",
                                    "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                  },
                                  "FeeChargeRate": {
                                    "description": "Fee charge rate applied to tier",
                                    "type": "string",
                                    "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                  },
                                  "FeeChargeRateType": {
                                    "description": "Rate type other than EAR",
                                    "type": "string",
                                    "enum": ["Gross", "Net", "Other"]
                                  },
                                  "FeeChargeRateOtherType": {
                                    "description": "Other Code Type",
                                    "type": "object",
                                    "properties": {
                                      "Code": {
                                        "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                        "type": "string",
                                        "minLength": 4,
                                        "maxLength": 4
                                      },
                                      "Name": {
                                        "description": "Name of 'Other' code set value applicable to specified attribute",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 256
                                      },
                                      "Description": {
                                        "description": "Description for 'Other' code set value applicable to specified attribute",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "FeeChargeApplicationFrequency": {
                                    "description": "Frequency with which the rate, or amount is charged",
                                    "type": "string",
                                    "enum": ["AcademicTerm", "Daily", "Weekly", "Monthly", "Quarterly", "Half-Yearly", "Yearly", "Overnight", "Other"]
                                  },
                                  "FeeChargeOtherApplicationFrequency": {
                                    "description": "Other Code Type",
                                    "type": "object",
                                    "properties": {
                                      "Code": {
                                        "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                        "type": "string",
                                        "minLength": 4,
                                        "maxLength": 4
                                      },
                                      "Name": {
                                        "description": "Name of 'Other' code set value applicable to specified attribute",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 256
                                      },
                                      "Description": {
                                        "description": "Description for 'Other' code set value applicable to specified attribute",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "FeeChargeCalculationFrequency": {
                                    "description": "Frequency with which the rate, or amount is calculated",
                                    "type": "string",
                                    "enum": ["AcademicTerm", "Daily", "Weekly", "Monthly", "Quarterly", "Half-Yearly", "Yearly", "Overnight", "Other"]
                                  },
                                  "FeeChargeOtherCalculationFrequency": {
                                    "description": "Other Code Type",
                                    "type": "object",
                                    "properties": {
                                      "Code": {
                                        "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                        "type": "string",
                                        "minLength": 4,
                                        "maxLength": 4
                                      },
                                      "Name": {
                                        "description": "Name of 'Other' code set value applicable to specified attribute",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 256
                                      },
                                      "Description": {
                                        "description": "Description for 'Other' code set value applicable to specified attribute",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "required": ["FeeChargeType"],
                                "additionalProperties": false
                              }
                            },
                            "MaximumMonthlyOverdraftCharge": {
                              "description": "Maximum Monthly Charge (MMC) for Overdraft fee and charges.",
                              "type": "string",
                              "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                            },
                            "OverdraftType": {
                              "description": "Defines if the overdraft facility is committed ",
                              "type": "string",
                              "enum": ["Committed", "OnDemand"]
                            },
                            "Term": {
                              "description": "The duration of the overdraft, if it is non permanent",
                              "type": "string"
                            },
                            "Notes": {
                              "description": "Notes on the overdraft",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "FeesAndCharges": {
                        "type": "array",
                        "items": {
                          "description": "Fees And Charges",
                          "type": "object",
                          "properties": {
                            "ProductState": {
                              "description": "Describes if the offering is promotional or a description of a future state.",
                              "type": "string",
                              "enum": ["FutureMultipleTerms", "Promotional", "Regular"]
                            },
                            "Fees": {
                              "description": "Fees",
                              "type": "object",
                              "properties": {
                                "StartPromotionOrFutureTerms": {
                                  "description": "Describes the start date",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "StopPromotionOrFutureTerms": {
                                  "description": "Describes the end date",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "LengthPromotionalInDays": {
                                  "description": "Describes the length if only a duration is given instead of a date",
                                  "type": "integer"
                                },
                                "DateOfChange": {
                                  "description": "Date of the change if it refers to future terms",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "FeeLowerTier": {
                                  "description": "Lower occurrence / range boundary e.g.. For returned cheques this could be 0, which means the first returned cheque fits into this range",
                                  "type": "integer"
                                },
                                "FeeHigherTier": {
                                  "description": "Higher occurrence / range boundary e.g. For returned cheques this could be 10, which means the first 10 returned cheque fits into this range",
                                  "type": "integer"
                                },
                                "FeeDetails": {
                                  "type": "array",
                                  "items": {
                                    "description": "Fee Details",
                                    "type": "object",
                                    "properties": {
                                      "FeeSubType": {
                                        "description": "Fee Sub Type code",
                                        "type": "string",
                                        "enum": ["FutureMultipleTerms", "Promotional", "Regular"]
                                      },
                                      "FeeDetail": {
                                        "description": "Fee Detail",
                                        "type": "object",
                                        "properties": {
                                          "FeeType": {
                                            "description": "A description of the Fee type",
                                            "type": "string",
                                            "enum": ["Other", "ATMDonation", "ATMDeposATMPaidIn", "ReportCertBalance", "ATMAbroadConVisaCredit", "ATMAbroadConVisaDebit", "ATMCardnetEnvIn", "ATMCashGroupATMCreditCard", "ATMCashNonGroupATMCredittcard", "ATMCashGroupATMDebitCard", "ATMCashNonGroupATMDebitcard", "ATMConGroupATM", "ATMAbroad", "ATMForeignCashDebCard", "ATMAbroadGoldVisaDebit", "ATMSpainCashCard", "ATMSpainDebitCard", "ATMSpainConversionDebitCard", "ATMSpainConversionCashCard", "ATMNonSterlingWithdrawal", "ATMAbroadVisaCredit", "ATMAbroadVisaDebit", "ATMAbroadConVisaGoldDebit", "ATMWidthdrawCash", "BACSOnLineAncilliary", "BACSBatch", "BACSOnLineFile", "BACSFileItem", "BACSOnLineSetup ", "BACSItem", "BACSItemInterbranch", "BACSBulkBatch", "BACSOnLineOverlimit", "BACSOnLinePayment", "BACSRecallItem", "BACSOnLineService", "BACSBulkInternet", "BACSTELDirDebSmartCard", "BACSTELDirDebWebInit", "BACSTELirDebWebInit", "BACSTELDirDebOverlimit", "BACSTELDirDebPayment", "BACSTELDirDebService", "BACSTELDirDebAncilliary", "BACSDirectItemProfile", "BACSTELAncilliary", "BACSTELSmartCard", "BACSTELFile", "BACSTELSetup ", "BACSTELOverlimit", "BACSTELPayment", "BACSTELService", "CHAPSOutBranch", "CHAPSCancellation", "CHAPSOutOnlineDepositAcc", "CHAPSIn", "CHAPSOutInterBank", "CHAPSInterBank", "CHAPSOutPost", "CHAPSOutInterBranch", "CHAPSOut", "CHAPSOutOnline", "CHAPSandForeignPay", "CHAPSOutManual", "CardCardReplacement", "DraftsCounter", "DraftsBankers", "DraftsIntlPayableAbroad", "DraftsLostStolen", "CardPersonalisedCard", "DraftsIntlStoppedCancelled", "EuroChqXLess", "EuroChqXPlus", "FPSOutFutureDated", "FPSOutImmediate", "FPSOut", "FPSOutOwn", "FPSInBranch", "FPSUKPayUrgent", "LegalArticlesReport", "LegalSealing", "LegalBondAndGuarantee", "LegalCourtOrder", "LegalCoSearch", "LegalDepositAssignment", "LegalGuaranteePrep", "LegalLifePolicyPrepCo", "LegalLifePolicyPrepPersonal", "LegalPriorityPariPassu", "LegalSubordinationAgreement", "DirDebDirectDebitAdmin", "DirDebDirectDebitCancel", "IntlPayBIBForeignLimit", "IntlPayCreditTransCust", "IntlPayCreditTransNonCust", "IntlPayUrgentPaymentForeign", "IntlPayExpressMoneyMover", "IntlPayEEAPayUrgent", "IntlPayIrishPayUrgent", "IntlPayEEAPay", "IntlPayForeignIn1CPlus", "IntlPayForeignPaymentInUKAcc", "IntlPayForeignCharge", "IntlPayForeignCancellation", "IntlPayForeignStandardEUEuroBIC", "IntlPayFXFeeRate", "IntlPayForeignInternet", "IntlPayForeign", "IntlPayForeignInbound", "IntlPayFXPaymentOut", "IntlPayForeignInSub1C", "IntlPayFXRate", "IntlPayForeignStandardEUEuroNoBIC", "IntlPayFXPaymentOutIR", "IntlPayFXFee", "IntlPayPurchaseNonSterling", "IntlPayPostPaymentForeign", "IntlPayPurchaseRateNonSterling", "IntlPayPaymentTracing", "IntlPayStandardMoneyMover", "IntlPayMT101Transaction", "IntlPayTransNonSterling", "IntlPayTransRateNonSterling", "IntlPayForeignUrgentEUEuroBIC", "IntlPayForeignUrgentEUEuroNoBIC", "IntlPayUrgentPaymentGroup", "IntlPayUrgentPaymentUK", "IntlPayUSAPayUrgent", "IntlPayCurrencyPurchase", "IntlPayWorldpayPayment", "IntlPayCurrencyWithdraw", "InvPayBankDetailsWrong", "InvPayForeignBCNR", "InvPayForeignRecall", "InvGeneralInq", "InvOldInstruction", "InvPayPaymentRecall", "InvPayReturnDebitXVLess", "InvPayReturnDebitXVPlus", "InvPayStopPayment", "InvPayStandingOrdUnpaid", "SafeKeepAccess", "SafeKeepDeedMedium", "SafeKeepingEnvelope", "SafeKeepingInspection", "SafeKeepingLargeItem", "SafeKeepMultipleItems", "SafeKeepingParcel", "SafeKeepDeedSmall", "SafeKeepOneItem", "SafeKeepSafeCustody", "LoanArrangementFeePC", "LoanArrangement", "LoanEarlyRepayment", "LoanLatePayment", "LoanSMEUnsecuredLoan", "LoanTieredArrangement", "NightSafeNightSafeBankOpen", "NightSafeCreditSub5K", "NightSafeNightSafe", "NightSafeNightSafePaidIn", "OverdraftAnnualReview", "OverdraftTempOverdraft", "OverdraftUnauthorisedBorrowing", "POPostOfficeCounterCredit", "POPostOfficeCashCredit", "POPostOfficeCashOut", "POPostOfficeWithdrawal", "ChqBookTheftLossAllStopped", "ChqIssuedCurrencyAcc", "ChqCopy", "ChqDraft", "ChqIn", "ChqDraftSterling", "ChqOutIssued", "ChqSpecialChqPresentation", "ChqCounterCheque", "ChqChequeswithStatement", "ChqStopped", "ChqTrans", "ChqDraftFX", "ChqForeignCourier", "ChqForeignNegTenThou", "ChqForeignNegHundred", "ChequeForeignBankDivi", "ChqForeignNegFiftyThou", "ChqPensionCheque", "ChequeForeignOtherDivi", "ChqForeignNegFiveThou", "ChqForeignNegMax", "ChqForeignGBPMMDPlus", "ChqGiftCheque", "ChqCounterLodgement", "ChqCashDropLodgement", "ChqChequePhotocopy", "ChqPostOfficeCredit", "ChqPostOfficeChequeCollected", "ChqChequeRetrieval", "ChqReconcilliationPerTrans", "ChqSpecialPresentationCount", "ChqSpecialPresentationPTT", "ChqUnpaidCharge", "ChqUnpaidTransIn", "ChqUnpaidTransOut", "ChqUnpaidCheque", "ReportAuditLetter", "ReportFAXAdviceAdditional", "ReportTelAdviceAdditional", "ReportCreditHistory", "ReportCertInterestDuplicate", "ReportCertInterest", "ReportCreditHistoryAdditionalInYear", "ReportForeignStatusEnqElec", "ReportForeignStatusEnq", "ReportCashBackorInterestAnal", "ReportStatementChqDaily", "ReportStatementChqFortnightly", "ReportStatementChqMonthly", "ReportStatementChqWeekly", "ReportStatementAndDiviChq", "ReportReference", "ReportReferralItem", "ReportStatementByATM", "ReportStatementByBranch", "ReportStatementCopyRegular", "ReportStatusEnquiry", "ReportStatementFrequent", "ReportStatementMonthly", "ReportStatementCopy1", "ReportStatementToBranch", "ReportSMSTextMiniStatementorAlert", "ReportStatementFortnightly", "ReportSMSTextMiniStatementWoM", "ReportSMSTextAlertBalance", "ReportSMSTextAlert", "ReportTaxCert", "ReportWeeklyStatement", "ReportTextMessageBanking", "SEPACancellation", "SEPABranch", "SEPACredit", "SEPADirectDebit", "SEPAIn", "SEPAEuro", "SEPAOut", "SEPAUnpaid", "SEPAWinbitsAnnual Service", "SEPAWinbitsTransaction", "TransBillPaymentBranch", "TransBillCollect", "TransTelephoneBillPayment", "TransBankPayment", "TransBillPaymentTelephone", "TransCorrespondentBankFee", "TransCreditTransferUKDifferent", "TransCreditTransferUKSame", "TransCredit", "TransCreditTransfer", "TransBranchCredit", "TransDebit", "TransDebCardDeb", "TransUKDirDeb", "TransManualDeb", "TransBuyForeignWithGBP", "TransGoodValueReq", "TransSWIFTOutUKForeign", "TransInconpleteInstruction", "TransManualEntries", "TransManualTrans", "TransNonSterling", "TransPOSSaleForeign", "TransPriPaymentPost", "TransPOSSaleUK", "TransReturnPayment", "TransReconciliationPerTrans", "TransStandingOrdAdmin", "TransStandingOrd", "TransStandingOrdManPay", "TransTravellersChqOtherBank", "TransTelBusiPriPaymentForeignToUKAcc", "TransTeleItem", "TransTelBusiPriPaymentToGrpAcc", "TransTravellersChqRate", "TransTransferExGroup", "TransUnauthorisedPaidTrans", "TransUrgentPaymentPostal", "TransUnpaidTrans", "TransTelBusiPriPaymentToNonGrpAcc", "TransSWIFTOutNonEEASterling", "AutoAutoCredit", "AutoAutomatedEntries", "AutoAutoCreditPhoneInet", "AutoAutomatedTrans", "AutoDebitCardCommercial", "AutoFPSAutoCredit", "VisaConvertAbroadForeign", "VisaBureauDeChange", "VisaTravellersChqorCurrency", "OnlineInternetBillPayment", "OnlineBusinessOnlineEuroPayment", "OnlineBusinessOnlineUrgentEuroPayment", "OnlineBusinessOnlineForeignPayment", "OnlineInterbankTransfer", "OnlineInterbankPerTransfer", "OnlineInterbranchTransfer", "OnlineInterbranchPerTransfer", "OnlineSubscriptionMonthly", "OnlineBankingPayment", "OnlineBankingSubscription", "OnlinePOSSale", "OnlinePersonalCustAncillarys", "OnlinePersonalCustService", "OnlinePersonalCustOverlimits", "OnlineReplacementCardReader", "OnlinePersonalCustSetUp", "OnlinePersonalCustTransaction", "OnlinePaymentinGBPtoUK", "OnlineUrgentPayment", "OnlinePaymentinUSDtoUS", "OnlineBulkDirectDebSterling", "ForeignChqSent", "ForeignChqSelf", "ForeignChqEncashment", "ForeignFXInwardsCust", "ForeignFXTransfersROI", "ForeignFXForwardTrans", "ForeignFXTransfersBOI", "ForeignExMaintenance", "ForeignFXInwardsNonCust", "ForeignFXOutwards", "ForeignPurchase", "ForeignStatusRep", "ForeignChqDraft", "ForeignChqCLess", "ForeignChqMLess", "ForeignChqOther", "ForeignChqMPlus", "ForeignChqCCC", "ServiceCAccountFee", "ServiceCAccountFeeMonthly", "ServiceCAccountFeeQuarterly", "ServiceCBalanceHandling", "ServiceCFixedTariff", "ServiceCBusiDepAccBreakage", "ServiceCMonitorDaily", "ServiceCManagementFee", "ServiceCMinimumMonthlyFee", "ServiceCMonitorMonthly", "ServiceCMonitorWeekly", "ServiceCSecurityFee", "ServiceCMT940AccountFirst", "ServiceCMT940AccountSubsequent", "ServiceCOther", "CounterCoinHandling", "CounterCashIn", "CounterCashInNotUs", "CounterCashOut", "CounterCashX", "CounterForeignCashMax", "CounterForeignNoteHandling", "CounterForeignCashOut", "CounterCashFeeRate", "CounterForeignCashOutTx", "CounterCounterLodgement", "CounterCashDropLodgement", "CounterNotesLodged", "CounterNotesOut", "CounterCashInOwn", "CounterPaidTrans", "CounterCashFeePercent"]
                                          },
                                          "Other": {
                                            "description": "Describe other fee type",
                                            "type": "string"
                                          },
                                          "StartPromotionOrFutureTerms": {
                                            "description": "Describes the start date",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "StopPromotionOrFutureTerms": {
                                            "description": "Describes the end date",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "LengthPromotionalInDays": {
                                            "description": "Describes the length if only a duration is given instead of a date",
                                            "type": "integer"
                                          },
                                          "DateOfChange": {
                                            "description": "Date of the change if it refers to future terms",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "FeeSubDetails": {
                                            "description": "Fee Sub Details",
                                            "type": "object",
                                            "properties": {
                                              "FeeFrequency": {
                                                "description": "Triggering frequency of the fee",
                                                "type": "string",
                                                "enum": ["AcademicTerm", "AccountClosing", "AccountOpening", "AtTimeOfLoanRepayment", "ChargingPeriod", "Daily", "EveryFiveBusinessDays", "Item", "Monthly", "OnAccountAnniversary", "PerHour", "PerOccurrence", "PerSheet", "PerTransactionAmount", "PerTransactionPercentage", "Quarterly", "SixMonthly", "StartOfLoan", "StatementMonthly", "Weekly", "Yearly"]
                                              },
                                              "FeeAmount": {
                                                "description": "Fee in GBP",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                              },
                                              "FeeMin": {
                                                "description": "Fee in GBP",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                              },
                                              "FeeMax": {
                                                "description": "Fee in GBP",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                              },
                                              "FeeRate": {
                                                "description": "% Rate",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                              },
                                              "Negotiable": {
                                                "description": "Indicates that this Fee Rate or Fee Amount is negotiable based on risk or other factor",
                                                "type": "boolean"
                                              },
                                              "RepresentativeRate": {
                                                "description": "Representative Rate",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                              },
                                              "FeeLowerTier": {
                                                "description": "Lower occurrence / range boundary e.g. For returned cheques this could be 0, which means the first returned cheque fits into this range",
                                                "type": "integer"
                                              },
                                              "FeeHigherTier": {
                                                "description": "Higher occurrence / range boundary e.g. For returned cheques this could be 10, which means the first 10 returned cheque fits into this range",
                                                "type": "integer"
                                              },
                                              "FeesAndChargesNotes": {
                                                "description": "Supplementary information for fees and charges",
                                                "type": "string"
                                              }
                                            },
                                            "required": ["FeeFrequency", "Negotiable"],
                                            "additionalProperties": false
                                          }
                                        },
                                        "required": ["FeeType", "FeeSubDetails"],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": ["FeeSubType", "FeeDetail"],
                                    "additionalProperties": false
                                  },
                                  "minItems": 1
                                }
                              },
                              "required": ["FeeDetails"],
                              "additionalProperties": false
                            }
                          },
                          "required": ["ProductState", "Fees"],
                          "additionalProperties": false
                        },
                        "minItems": 1
                      },
                      "Benefits": {
                        "description": "Benefit",
                        "type": "object",
                        "properties": {
                          "Benefit": {
                            "description": "Describe  one or more benefits if they exist",
                            "type": "boolean"
                          },
                          "BenefitGroup": {
                            "type": "array",
                            "items": {
                              "description": "Benefit Interest Group",
                              "type": "object",
                              "properties": {
                                "BenefitSubType": {
                                  "description": "Benefit Subtype Code",
                                  "type": "string",
                                  "enum": ["FutureMultipleTerms", "Promotional", "Regular"]
                                },
                                "BenefitItem": {
                                  "description": "Benefit Item",
                                  "type": "object",
                                  "properties": {
                                    "StartPromotionOrFutureTerms": {
                                      "description": "Describes the start date",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "StopPromotionOrFutureTerms": {
                                      "description": "Describes the end date",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "LengthPromotionalInDays": {
                                      "description": "Describes the length if only a duration is given instead of a date in days",
                                      "type": "integer"
                                    },
                                    "DateOfChange": {
                                      "description": "Date of the change if it refers to future terms",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "BenefitDetail": {
                                      "type": "array",
                                      "items": {
                                        "description": "Benefit detail",
                                        "type": "object",
                                        "properties": {
                                          "BenefitType": {
                                            "description": "Type that represents the nature of the benefit",
                                            "type": "string"
                                          },
                                          "BenefitName": {
                                            "description": "The name of the benefit",
                                            "type": "string"
                                          },
                                          "BenefitValue": {
                                            "description": "The value or values permissible for a specific benefit for an individual product representing a product characteristic",
                                            "type": "string"
                                          },
                                          "DefaultToAccounts": {
                                            "description": "Is the benefit part of the default account",
                                            "type": "boolean"
                                          },
                                          "BenefitID": {
                                            "description": "Unique benefit identifier per organisation",
                                            "type": "string"
                                          },
                                          "CriteriaType": {
                                            "type": "array",
                                            "items": {
                                              "description": "Criteria that is required in order to be eligible for the Benefit",
                                              "type": "string",
                                              "enum": ["CashDeposit", "Deposit", "DirectDebit", "InitialDeposit", "InternetLogon", "MobileLogon", "RegularDeposit"]
                                            }
                                          },
                                          "MinimumCriteria": {
                                            "description": "Minimum amount for the criteria",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                          },
                                          "MaximumCriteria": {
                                            "description": "Maximum amount for the criteria",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                          },
                                          "Counter": {
                                            "description": "Counter for the criteria (e.g. number of DD)",
                                            "type": "integer"
                                          },
                                          "BenefitDescription": {
                                            "description": "A textual explanation of what the benefit is",
                                            "type": "string"
                                          },
                                          "PromotionStartDate": {
                                            "description": "If the benefit is temporal the start date is when the benefit comes into effect",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "PromotionEndDate": {
                                            "description": "If the benefit is temporal the end date is when the benefit is no longer applicable",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "required": ["BenefitItem"],
                              "additionalProperties": false
                            }
                          }
                        },
                        "required": ["Benefit"],
                        "additionalProperties": false
                      }
                    },
                    "required": ["Organisation", "ProductType", "ProductSegment", "InternationalPaymentsSupported", "ProductIdentifier", "CardWithdrawalLimit", "ProductDescription", "TsandCs", "AccessChannels", "CardType", "Contactless", "ChequeBookAvailable", "CreditScoringPartOfAccountOpeningForGettingAnAccount", "ProductURL", "Currency", "OverdraftOffered", "CAPricing", "Eligibility", "CreditInterest", "FeesAndCharges", "Benefits"]
                  }
                }
              },
              "required": ["meta", "data"],
              "additionalProperties": false
            }
          },
          "400": {
            "description": "You have sent a request which could not be understood.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "400 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["400"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Bad request"]
                },
                "description": {
                  "type": "string",
                  "enum": ["You have sent a request which could not be understood."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "408": {
            "description": "Your client has failed to submit a request, and a timeout has occurred.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "408 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["408"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Client timeout"]
                },
                "description": {
                  "type": "string",
                  "enum": ["Your client has failed to submit a request, and a timeout has occurred."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "429": {
            "description": "You have requested this resource too often. Slow down.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "429 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["429"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Too many requests"]
                },
                "description": {
                  "type": "string",
                  "enum": ["You have requested this resource too often. Slow down."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "500": {
            "description": "An error occurred on the server. No further information is available.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "500 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["500"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Internal server error"]
                },
                "description": {
                  "type": "string",
                  "enum": ["An error occurred on the server. No further information is available."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "503": {
            "description": "The service is temporarily unavailable.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "503 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["503"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Service temporarily unavailable"]
                },
                "description": {
                  "type": "string",
                  "enum": ["The service is temporarily unavailable."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "default": {
            "description": "A standard error response.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "Error object",
              "type": "object",
              "properties": {
                "status": {
                  "description": "This corresponds to the HTTP status code",
                  "type": "string"
                },
                "title": {
                  "description": "A short title of the type of error",
                  "type": "string"
                },
                "description": {
                  "description": "Further details describing the error",
                  "type": "string"
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          }
        }
      },
      "head": {
        "tags": ["PCA"],
        "description": "Gets header information on the current set of `Personal Current Account` data",
        "parameters": [{
          "name": "If-Modified-Since",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if modified since a given date",
          "in": "header",
          "required": false
        }, {
          "name": "If-None-Match",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "in": "header",
          "required": false
        }],
        "responses": {
          "default": {
            "description": "No response",
            "schema": {
              "title": "No response",
              "type": "object",
              "properties": {}
            }
          }
        }
      }
    },
    "/business-current-accounts": {
      "get": {
        "tags": ["BCA"],
        "description": "Gets a list of all `Branch Current Account` objects.",
        "parameters": [{
          "name": "If-Modified-Since",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if modified since a given date",
          "in": "header",
          "required": false
        }, {
          "name": "If-None-Match",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "in": "header",
          "required": false
        }],
        "responses": {
          "200": {
            "description": "Successful response with a list of `Branch Current Account` data",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header",
                "default": "max-age=31536000"
              },
              "Etag": {
                "type": "string",
                "description": "A unique ID identifying whether this resource has changed"
              },
              "Cache-Control": {
                "type": "string",
                "description": "Describes how long this response can be cached",
                "default": "max-age=28800"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "title": "Meta data",
                  "type": "object",
                  "properties": {
                    "LastUpdated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "TotalResults": {
                      "type": "integer"
                    },
                    "Agreement": {
                      "type": "string",
                      "enum": ["Use of the APIs and any related data will be subject to the terms of the Open Licence and subject to terms and conditions"]
                    },
                    "License": {
                      "description": "Open Banking License",
                      "type": "string",
                      "format": "uri",
                      "enum": ["https://www.openbanking.org.uk/open-licence"]
                    },
                    "TermsOfUse": {
                      "description": "Open Banking Terms of Use",
                      "type": "string",
                      "format": "uri",
                      "enum": ["https://www.openbanking.org.uk/terms"]
                    }
                  },
                  "required": ["LastUpdated", "TotalResults", "Agreement", "License", "TermsOfUse"],
                  "additionalProperties": false
                },
                "data": {
                  "type": "array",
                  "items": {
                    "title": "Business current account",
                    "description": "Business current account",
                    "type": "object",
                    "properties": {
                      "Organisation": {
                        "description": "Organisation",
                        "type": "object",
                        "properties": {
                          "ParentOrganisation": {
                            "description": "Parent organisation",
                            "type": "object",
                            "properties": {
                              "LEI": {
                                "description": "The LEI ID of the organisation",
                                "type": "string",
                                "pattern": "^[A-Z0-9]{18,18}[0-9]{2,2}$"
                              },
                              "BIC": {
                                "description": "The BIC from the organisation",
                                "type": "string",
                                "pattern": "[A-Z]{6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3})?"
                              },
                              "OrganisationName": {
                                "description": "Organisation Name",
                                "type": "object",
                                "properties": {
                                  "LegalName": {
                                    "description": "Legal Name of the organisation",
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 35
                                  }
                                },
                                "required": ["LegalName"],
                                "additionalProperties": false
                              }
                            },
                            "required": ["OrganisationName"],
                            "additionalProperties": false
                          },
                          "Brand": {
                            "description": "Brand",
                            "type": "object",
                            "properties": {
                              "TrademarkIPOCode": {
                                "description": "The Intellectual Property Office (IPO) is the official body responsible for intellectual property (IP) rights including patents, designs, trademarks and copyright. (Code: UK or EU only)",
                                "type": "string",
                                "enum": ["UK", "EU"]
                              },
                              "TrademarkID": {
                                "description": "The trademark number that has been registered with the Intellectual Property Office. Note: The 2 letter IPO prefix should be omitted",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 35
                              }
                            },
                            "required": ["TrademarkIPOCode", "TrademarkID"],
                            "additionalProperties": false
                          }
                        },
                        "required": ["ParentOrganisation", "Brand"],
                        "additionalProperties": false
                      },
                      "ProductType": {
                        "description": "Descriptive code for the product category",
                        "type": "string",
                        "enum": ["BCA"]
                      },
                      "ProductName": {
                        "description": "The name of the product used for marketing purposes from a customer perspective. i.e. what the customer would recognise",
                        "type": "string"
                      },
                      "ProductSegment": {
                        "type": "array",
                        "items": {
                          "description": "Marketing or industry segment that the product is designed for",
                          "type": "string",
                          "enum": ["Basic", "Business", "General", "Graduate", "International", "Packaged", "Personal", "Premium", "Reward", "SME", "Student", "YoungAdult", "Youth"]
                        },
                        "minItems": 1
                      },
                      "InternationalPaymentsSupported": {
                        "description": "Indicates that the account supports international payments",
                        "type": "boolean"
                      },
                      "ProductIdentifier": {
                        "description": "Identifier within the parent organisation for the product. Must be unique in the organisation",
                        "type": "string"
                      },
                      "CardWithdrawalLimit": {
                        "description": "The daily Limit that a customer can get via the ATM. This describes the default limit rather than the maximum",
                        "type": "string",
                        "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                      },
                      "ProductDescription": {
                        "description": "Description of the product provided by the parent organisation",
                        "type": "string"
                      },
                      "TsandCs": {
                        "description": "URL provided by the parent organisation which redirects to the current T&Cs",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1
                      },
                      "AccessChannels": {
                        "description": "Ways to interact with the bank when managing account",
                        "type": "array",
                        "items": {
                          "description": "Channel",
                          "type": "string",
                          "enum": ["ATM", "Branch", "BusinessCommercialCentre", "CallCentre", "MobileApps", "MobileBanking", "Online", "Phone", "Post", "PostOffice", "RelationshipManager", "Text"]
                        },
                        "minItems": 1
                      },
                      "CardType": {
                        "description": "Card Type available",
                        "type": "array",
                        "items": {
                          "description": "Indicates the card scheme",
                          "type": "string",
                          "enum": ["BasicCard", "BusinessQuickLodgeCard", "Cashcard", "ContactlessCashcard", "ContactlessDebitMastercard", "ContactlessDebitVisa", "DebitMastercard", "VisaDebit", "DepositCard", "OperatorCard", "POCACard"]
                        },
                        "minItems": 1
                      },
                      "Contactless": {
                        "description": "Does the card issued have contactless facility",
                        "type": "boolean"
                      },
                      "MobileWallet": {
                        "description": "Mobile wallet supported by this product. A mobile wallet being any electronic device that allows an individual to make electronic commerce transactions",
                        "type": "array",
                        "items": {
                          "description": "Mobile wallet supported by this product. A mobile wallet being any electronic device that allows an individual to make electronic commerce transactions",
                          "type": "string",
                          "enum": ["AndroidPay", "ApplePay", "IssuerMobileApp", "MobileBankingApp", "Other", "PayM", "SamsungPay", "VodafoneWallet"]
                        }
                      },
                      "CardNotes": {
                        "description": "Optional additional notes to supplement the card details",
                        "type": "string"
                      },
                      "ChequeBookAvailable": {
                        "description": "Can a chequebook be issued",
                        "type": "boolean"
                      },
                      "CreditScoringPartOfAccountOpeningForGettingAnAccount": {
                        "description": "Indicates whether a credit check performed on an inquiry to open an account is submitted",
                        "type": "boolean"
                      },
                      "CreditScoringPartOfAccountOpeningIsAHardOrSoftCreditScore": {
                        "description": "Describes the type of credit scoring",
                        "type": "array",
                        "items": {
                          "description": "Indicates the type of scoring",
                          "type": "string",
                          "enum": ["Hard", "Soft"]
                        }
                      },
                      "CreditScoringPartOfAccountOpeningText": {
                        "description": "Details on the specific credit scoring",
                        "type": "string"
                      },
                      "CreditScoringPartOfAccountOpeningForIDVerification": {
                        "description": "Indicates whether a credit check is used to check the address of a potential new account holder",
                        "type": "boolean"
                      },
                      "CreditScoringPartOfAccountOpeningIDVerificationIsAHardOrSoftCreditScore": {
                        "type": "array",
                        "items": {
                          "description": "Indicates the type of scoring",
                          "type": "string",
                          "enum": ["Hard", "Soft"]
                        }
                      },
                      "CreditScoringPartOfAccountOpeningIDVerificationText": {
                        "description": "Details on the specific credit scoring",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "MaximumMonthlyCharge": {
                        "description": "The maximum Relevant Charges that could accrue",
                        "type": "string",
                        "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                      },
                      "ProductURL": {
                        "description": "URL provided by the organisation which redirects to the product (on live products only). There might be more than one product at a given URL",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uri"
                        },
                        "minItems": 1
                      },
                      "Currency": {
                        "description": "Currency of the Account. Default to GBP at present",
                        "type": "array",
                        "items": {
                          "description": "Active or Historic Currency Code",
                          "type": "string",
                          "pattern": "[A-Z]{3}"
                        },
                        "minItems": 1
                      },
                      "OverdraftOffered": {
                        "description": "Indicates whether an overdraft offered for this account",
                        "type": "boolean"
                      },
                      "Feature": {
                        "type": "array",
                        "items": {
                          "description": "Account Features",
                          "type": "object",
                          "properties": {
                            "ExistingFeature": {
                              "description": "Indicates whether the account has any feature",
                              "type": "boolean"
                            },
                            "ProductState": {
                              "description": "Describes if the offering is promotional or a description of a future state.",
                              "type": "string",
                              "enum": ["FutureMultipleTerms", "Promotional", "Regular"]
                            },
                            "StartPromotionOrFutureTerms": {
                              "description": "Describes the start date",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "StopPromotionOrFutureTerms": {
                              "description": "Describes the end date",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "LengthPromotionalInDays": {
                              "description": "Describes the length if only a duration is given instead of a date",
                              "type": "integer"
                            },
                            "DateOfChange": {
                              "description": "Date of the change if it refers to future terms",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "FeatureDetails": {
                              "description": "Feature details",
                              "type": "array",
                              "items": {
                                "description": "Feature Details",
                                "type": "object",
                                "properties": {
                                  "FeatureSubType": {
                                    "description": "",
                                    "type": "string",
                                    "enum": ["FutureMultipleTerms", "Promotional", "Regular"]
                                  },
                                  "StartPromotionOrFutureTerms": {
                                    "description": "Describes the start date",
                                    "type": "string",
                                    "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                  },
                                  "StopPromotionOrFutureTerms": {
                                    "description": "Describes the end date",
                                    "type": "string",
                                    "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                  },
                                  "LengthPromotionalInDays": {
                                    "description": "Describes the length if only a duration is given instead of a date",
                                    "type": "integer"
                                  },
                                  "DateOfChange": {
                                    "description": "Date of the change if it refers to future terms",
                                    "type": "string",
                                    "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                  },
                                  "FeatureType": {
                                    "description": "Type that represents the nature of the feature",
                                    "type": "string"
                                  },
                                  "FeatureName": {
                                    "description": "The name of the feature",
                                    "type": "string"
                                  },
                                  "FeatureDescription": {
                                    "description": "A textual explanation of what the feature",
                                    "type": "string"
                                  },
                                  "FeatureValue": {
                                    "description": "The value or values permissible for a specific feature for an individual product representing a product characteristic",
                                    "type": "string"
                                  },
                                  "CriteriaType": {
                                    "description": "Criteria that is required in order to be eligible for the feature",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "required": ["ExistingFeature"]
                        }
                      },
                      "CAPricing": {
                        "type": "array",
                        "items": {
                          "description": "Card Price",
                          "type": "object",
                          "properties": {
                            "ProductState": {
                              "description": "Describes if the offering is promotional or a description of a future state.",
                              "type": "string",
                              "enum": ["FutureMultipleTerms", "Promotional", "Regular"]
                            },
                            "CAPricingItem": {
                              "description": "Card Pricing",
                              "type": "object",
                              "properties": {
                                "StartPromotionOrFutureTerms": {
                                  "description": "Describes the start date",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "StopPromotionOrFutureTerms": {
                                  "description": "Describes the end date",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "LengthPromotionalInDays": {
                                  "description": "Describes the length if only a duration is given instead of a date",
                                  "type": "integer"
                                },
                                "DateOfChange": {
                                  "description": "Date of the change if it refers to future terms",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "ExchangeRateAdjustment": {
                                  "description": "The margin added, by certain card issuers, to the scheme rate in order to arrive at the exchange rate qouted as the reference exchange rate to the cardholder",
                                  "type": "string",
                                  "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "required": ["ProductState", "CAPricingItem"],
                          "additionalProperties": false
                        },
                        "minItems": 1
                      },
                      "Eligibility": {
                        "description": "Eligibility",
                        "type": "object",
                        "properties": {
                          "AgeRestricted": {
                            "description": "Indicates a customer's age is part of eligibility criteria",
                            "type": "boolean"
                          },
                          "MinimumAge": {
                            "description": "Minimum age, in years, required to hold an account",
                            "type": "integer"
                          },
                          "MaximumAge": {
                            "description": "Maximum age, in years, allowed to hold the account",
                            "type": "integer"
                          },
                          "MaximumAgeToOpen": {
                            "description": "Maximum age, in years, to open an account",
                            "type": "integer"
                          },
                          "OtherFinancialHoldingRequired": {
                            "description": "Indicates that it is necessary to hold another product with the bank in order to be eligible for this product or feature",
                            "type": "boolean"
                          },
                          "Description": {
                            "description": "One paragraph detailing the eligibility",
                            "type": "string"
                          },
                          "IncomeTurnoverRelated": {
                            "description": "Indicates if eligibility linked to income",
                            "type": "boolean"
                          },
                          "SingleJointIncome": {
                            "description": "Minimum Income Source. For certain products a minimum income is required. This can be mandated as to the single income or to a joint income. This field describes this",
                            "type": "string",
                            "enum": ["Joint", "SoleIncome", "SoleOrJoint", "Turnover"]
                          },
                          "MinimumIncomeTurnoverAmount": {
                            "description": "Minimum income / Turnover required to hold the product",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "MinimumIncomeTurnoverCurrency": {
                            "description": "Minimum income / Turnover Currency",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "IncomeCondition": {
                            "description": "Stipulates any particular definition of income that applies to the income eligibility and/or method by which income must paid into the account (eg Salary DD)",
                            "type": "string"
                          },
                          "MinIncomeTurnoverPaidIntoAccount": {
                            "description": "Minimum Income Amount required to paid into the account",
                            "type": "integer"
                          },
                          "MinimumIncomeFrequency": {
                            "description": "The frequency that the minimum mentioned before is deposited in the account. Yearly is very important for premium accounts",
                            "type": "string",
                            "enum": ["AcademicTerm", "HalfYearly", "Monthly", "Quarterly", "Weekly", "Yearly"]
                          },
                          "AnnualBusinessTurnover": {
                            "description": "Annual Business Turnover",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "AnnualBusinessTurnoverCurrency": {
                            "description": "Annual Business Turnover Currency",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "ResidencyRestricted": {
                            "description": "Indicates a customer's residency forms part of the eligibility criteria",
                            "type": "boolean"
                          },
                          "ResidencyRestrictedRegion": {
                            "description": "Indicates a customer must be current resident of a geographic area/country",
                            "type": "string",
                            "enum": ["UK", "EEA", "EU", "EFTA", "GB - ENG", "GB - NIR", "GB - SCT", "GB - WLS", "IRL"]
                          },
                          "MaxNumberOfAccounts": {
                            "description": "Maximum number of the same prodcut the customer may hold",
                            "type": "string"
                          },
                          "ThirdSectorOrganisations": {
                            "description": "Is the product available to operate as a Clubs or Societies account?",
                            "type": "boolean"
                          },
                          "MinimumDeposit": {
                            "description": "A minimum deposit required to hold this account",
                            "type": "boolean"
                          },
                          "OpeningDepositMinimum": {
                            "description": "Minimum Amount to be held on account",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "OpeningDepositMinimumCurrency": {
                            "description": "The currency of the Minimum Amount to be depositing at opening",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "MinimumOperatingBalanceExists": {
                            "description": "Is there a Minimum Operating Balance?",
                            "type": "boolean"
                          },
                          "MinimumOperatingBalance": {
                            "description": "Minimum Operating Balance",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "MinimumOperatingBalanceCurrency": {
                            "description": "Minimum Operating Balance currency",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "MaximumOpeningAmount": {
                            "description": "A maximum amount to be deposited at opening",
                            "type": "boolean"
                          },
                          "OpeningDepositMaximumAmount": {
                            "description": "Maximum Amount to be depositing at opening",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "OpeningDepositMaximumCurrency": {
                            "description": "The currency of the Minimum Amount to be depositing at opening",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "EligibilityName": {
                            "description": "Free text description, denotes non standard eligibilities not included in the code list",
                            "type": "string"
                          },
                          "EligibilityType": {
                            "description": "Eligibility type",
                            "type": "string",
                            "enum": ["AnyBusinessCustomer", "BusinessOnly", "CreditCard", "CreditScoring", "EmailAddress", "ExistingCustomers", "IdAndV", "Mortgage", "NoArrearsOnLoan", "NoCustomerInArrears", "NoOverOverdraftThirtyDays", "NoSoleUkAccountOrBankrupt", "NTB", "NTBBusiness", "SoleStudentAccount", "SoleUkAccount", "StudentsOnly", "TwoMonthsOfCourseStart", "UCASFulltimeTwoYears"]
                          },
                          "EligibilityNotes": {
                            "description": "Optional additional notes to supplement the eligibility conditions. Only used for very specific conditions",
                            "type": "string"
                          },
                          "PreviousBankruptcy": {
                            "description": "Describes if a previous bankruptcy / insolvency disqualfies for this account Details in ELI-280",
                            "type": "boolean"
                          },
                          "MarketingEligibility": {
                            "type": "array",
                            "items": {
                              "description": "Specific eligibility for marketing",
                              "type": "string",
                              "enum": ["ExistingCustomers", "NewCustomersOnly", "SwitchersOnly", "StartUp"]
                            },
                            "uniqueItems": true
                          }
                        },
                        "required": ["AgeRestricted", "OtherFinancialHoldingRequired", "Description", "IncomeTurnoverRelated", "ResidencyRestricted", "ThirdSectorOrganisations", "PreviousBankruptcy"],
                        "additionalProperties": false
                      },
                      "CreditInterest": {
                        "description": "Credit Interest",
                        "type": "object",
                        "properties": {
                          "CreditCharged": {
                            "description": "Is credit paid to the account. The answer will be the condition of all other fields to be filled",
                            "type": "boolean"
                          },
                          "CreditInterestGroup": {
                            "type": "array",
                            "items": {
                              "description": "Credit Interest Group",
                              "type": "object",
                              "properties": {
                                "InterestTierSubType": {
                                  "description": "Describes if the offering is promotional, regular or a description of a future state",
                                  "type": "string",
                                  "enum": ["FutureMultipleTerms", "Promotional", "Regular"]
                                },
                                "CreditInterestItem": {
                                  "description": "Credit Interest item",
                                  "type": "object",
                                  "properties": {
                                    "StartPromotionOrFutureTerms": {
                                      "description": "Describes the start date",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "StopPromotionOrFutureTerms": {
                                      "description": "Describes the end date",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "LengthPromotionalInDays": {
                                      "description": "Describes the length if only a duration is given instead of a date",
                                      "type": "integer"
                                    },
                                    "DateOfChange": {
                                      "description": "Date of the change if it refers to future terms",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "StartDate": {
                                      "description": "If interest is charged on a specific date range as start date (often used for promotion)",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "EndDate": {
                                      "description": "If interest is charged on a specific date range as end date (often used for promotion)",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "CalculationFrequency": {
                                      "description": "How often is interest applied to account",
                                      "type": "string",
                                      "enum": ["Daily", "Weekly", "Monthly", "Quarterly", "Half-Yearly", "Yearly", "Overnight"]
                                    },
                                    "PaymentMethod": {
                                      "description": "Credit Interest Payment Method Code",
                                      "type": "string",
                                      "enum": ["Compound", "PayAway", "SelfCredit", "SimpleInterest"]
                                    },
                                    "InterestRateType": {
                                      "description": "Credit Interest Payment Rate Type",
                                      "type": "string",
                                      "enum": ["Fixed", "Variable"]
                                    },
                                    "FixedInterestLength": {
                                      "description": "Fixed interest length in days",
                                      "type": "integer"
                                    },
                                    "CalculationMethod": {
                                      "description": "Method for interest calculation",
                                      "type": "string",
                                      "enum": ["Banded", "Tiered", "Whole"]
                                    },
                                    "InterestTiers": {
                                      "type": "array",
                                      "items": {
                                        "description": "Credit Interest Tiers",
                                        "type": "object",
                                        "properties": {
                                          "InterestTier": {
                                            "description": "Identifier for the tier",
                                            "type": "string"
                                          },
                                          "TierValueMinimum": {
                                            "description": "Lower value of interest tier",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                          },
                                          "DailyChargeForMinimum": {
                                            "description": "Special charge on tiered overdraft",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                          },
                                          "TierValueMaximum": {
                                            "description": "Max Value of interst tier",
                                            "type": "string",
                                            "minLength": 1,
                                            "maxLength": 15
                                          },
                                          "DailyChargeForMaximum": {
                                            "description": "Special charge on tiered overdraft",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                          },
                                          "Rate": {
                                            "description": "Rate being paid by the bank (gross)",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                          },
                                          "RateComparisonType": {
                                            "description": "Rate Comparison Type",
                                            "type": "string",
                                            "enum": ["APR", "AER", "Gross", "Net", "RepApr"]
                                          },
                                          "APRAERRate": {
                                            "description": "AER or APR Rate for comparison",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "InterestNotes": {
                                      "description": "Additional notes to supplement the interest details",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "required": ["CreditInterestItem"],
                              "additionalProperties": false
                            }
                          }
                        },
                        "required": ["CreditCharged"],
                        "additionalProperties": false
                      },
                      "Overdraft": {
                        "type": "array",
                        "items": {
                          "description": "Overdraft",
                          "type": "object",
                          "properties": {
                            "OverdraftProductState": {
                              "description": "Describes if the offering is promotional or a description of a future state.",
                              "type": "string",
                              "enum": ["FutureMultipleTerms", "Promotional", "Regular"]
                            },
                            "StartPromotionOrFutureTerms": {
                              "description": "Describes the start date",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "StopPromotionOrFutureTerms": {
                              "description": "Describes the end date",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "LengthPromotionalInDays": {
                              "description": "Describes the length if only a duration is given instead of a date",
                              "type": "integer"
                            },
                            "DateOfChange": {
                              "description": "Date of the change if it refers to future terms",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "OverdraftTierBandSet": {
                              "description": "Overdraft Tier Band Set",
                              "type": "array",
                              "items": {
                                "description": "Tier Bandset",
                                "type": "object",
                                "properties": {
                                  "CMADefinedIndicator": {
                                    "description": "describes that the tiers and bands are set by the CMA order, as opposed to be set by the banks",
                                    "type": "boolean"
                                  },
                                  "ArrangementType": {
                                    "description": "Defines the arrangement of the overdraft",
                                    "type": "string",
                                    "enum": ["Unarranged", "Arranged", "Other"]
                                  },
                                  "ArrangementOtherType": {
                                    "description": "Other Code Type",
                                    "type": "object",
                                    "properties": {
                                      "Code": {
                                        "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                        "type": "string",
                                        "minLength": 4,
                                        "maxLength": 4
                                      },
                                      "Name": {
                                        "description": "Name of 'Other' code set value applicable to specified attribute",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 256
                                      },
                                      "Description": {
                                        "description": "Description for 'Other' code set value applicable to specified attribute",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "TierBandSetIdentification": {
                                    "description": "Identification of the set of tiers or bands",
                                    "type": "string"
                                  },
                                  "EAR": {
                                    "description": "EAR of the Overdraft Set",
                                    "type": "string",
                                    "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                  },
                                  "FeesAndCharges": {
                                    "description": "Type of fee or charge",
                                    "type": "array",
                                    "items": {
                                      "description": "Overdraft Fees Charges",
                                      "type": "object",
                                      "properties": {
                                        "FeeChargeType": {
                                          "description": "Type of fee or charge",
                                          "type": "string",
                                          "enum": ["Periodic", "Minimum", "Maximum", "Setup", "Review", "Renewal", "MinimumSetup", "MaximumSetup", "Total", "Item", "EmergencyLending", "Other"]
                                        },
                                        "FeeChargeOtherType": {
                                          "description": "Other Code Type",
                                          "type": "object",
                                          "properties": {
                                            "Code": {
                                              "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                              "type": "string",
                                              "minLength": 4,
                                              "maxLength": 4
                                            },
                                            "Name": {
                                              "description": "Name of 'Other' code set value applicable to specified attribute",
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 256
                                            },
                                            "Description": {
                                              "description": "Description for 'Other' code set value applicable to specified attribute",
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "FeeChargeAmount": {
                                          "description": "Charge applied to tier",
                                          "type": "string",
                                          "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                        },
                                        "FeeChargeRate": {
                                          "description": "Fee charge rate applied to tier",
                                          "type": "string",
                                          "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                        },
                                        "FeeChargeRateType": {
                                          "description": "Rate type other than EAR",
                                          "type": "string",
                                          "enum": ["Gross", "Net", "Other"]
                                        },
                                        "FeeChargeRateOtherType": {
                                          "description": "Other Code Type",
                                          "type": "object",
                                          "properties": {
                                            "Code": {
                                              "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                              "type": "string",
                                              "minLength": 4,
                                              "maxLength": 4
                                            },
                                            "Name": {
                                              "description": "Name of 'Other' code set value applicable to specified attribute",
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 256
                                            },
                                            "Description": {
                                              "description": "Description for 'Other' code set value applicable to specified attribute",
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "FeeChargeApplicationFrequency": {
                                          "description": "Frequency with which the rate, or amount is charged",
                                          "type": "string",
                                          "enum": ["AcademicTerm", "Daily", "Weekly", "Monthly", "Quarterly", "Half-Yearly", "Yearly", "Overnight", "Other"]
                                        },
                                        "FeeChargeOtherApplicationFrequency": {
                                          "description": "Other Code Type",
                                          "type": "object",
                                          "properties": {
                                            "Code": {
                                              "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                              "type": "string",
                                              "minLength": 4,
                                              "maxLength": 4
                                            },
                                            "Name": {
                                              "description": "Name of 'Other' code set value applicable to specified attribute",
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 256
                                            },
                                            "Description": {
                                              "description": "Description for 'Other' code set value applicable to specified attribute",
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "FeeChargeCalculationFrequency": {
                                          "description": "Frequency with which the rate, or amount is calculated",
                                          "type": "string",
                                          "enum": ["AcademicTerm", "Daily", "Weekly", "Monthly", "Quarterly", "Half-Yearly", "Yearly", "Overnight", "Other"]
                                        },
                                        "FeeChargeOtherCalculationFrequency": {
                                          "description": "Other Code Type",
                                          "type": "object",
                                          "properties": {
                                            "Code": {
                                              "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                              "type": "string",
                                              "minLength": 4,
                                              "maxLength": 4
                                            },
                                            "Name": {
                                              "description": "Name of 'Other' code set value applicable to specified attribute",
                                              "type": "string",
                                              "minLength": 1,
                                              "maxLength": 256
                                            },
                                            "Description": {
                                              "description": "Description for 'Other' code set value applicable to specified attribute",
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "required": ["FeeChargeType"],
                                      "additionalProperties": false
                                    }
                                  },
                                  "BufferAmount": {
                                    "description": "Amount on overdraft that is prearranged",
                                    "type": "string",
                                    "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                  },
                                  "OverdraftTierBand": {
                                    "type": "array",
                                    "items": {
                                      "description": "Tiers",
                                      "type": "object",
                                      "properties": {
                                        "TierBandIdentification": {
                                          "description": "Identification of the tier or band",
                                          "type": "string"
                                        },
                                        "TierValueMinimum": {
                                          "description": "Minimum value of the tier",
                                          "type": "string",
                                          "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                        },
                                        "TierValueMaximum": {
                                          "description": "Maximum value of the tier",
                                          "type": "string",
                                          "minLength": 1,
                                          "maxLength": 15
                                        },
                                        "EAR": {
                                          "description": "EAR of the Tier",
                                          "type": "string",
                                          "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                        },
                                        "FeesAndCharges": {
                                          "type": "array",
                                          "items": {
                                            "description": "Overdraft Fees Charges",
                                            "type": "object",
                                            "properties": {
                                              "FeeChargeType": {
                                                "description": "Type of fee or charge",
                                                "type": "string",
                                                "enum": ["Periodic", "Minimum", "Maximum", "Setup", "Review", "Renewal", "MinimumSetup", "MaximumSetup", "Total", "Item", "EmergencyLending", "Other"]
                                              },
                                              "FeeChargeOtherType": {
                                                "description": "Other Code Type",
                                                "type": "object",
                                                "properties": {
                                                  "Code": {
                                                    "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                                    "type": "string",
                                                    "minLength": 4,
                                                    "maxLength": 4
                                                  },
                                                  "Name": {
                                                    "description": "Name of 'Other' code set value applicable to specified attribute",
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "maxLength": 256
                                                  },
                                                  "Description": {
                                                    "description": "Description for 'Other' code set value applicable to specified attribute",
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "FeeChargeAmount": {
                                                "description": "Charge applied to tier",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                              },
                                              "FeeChargeRate": {
                                                "description": "Fee charge rate applied to tier",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                              },
                                              "FeeChargeRateType": {
                                                "description": "Rate type other than EAR",
                                                "type": "string",
                                                "enum": ["Gross", "Net", "Other"]
                                              },
                                              "FeeChargeRateOtherType": {
                                                "description": "Other Code Type",
                                                "type": "object",
                                                "properties": {
                                                  "Code": {
                                                    "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                                    "type": "string",
                                                    "minLength": 4,
                                                    "maxLength": 4
                                                  },
                                                  "Name": {
                                                    "description": "Name of 'Other' code set value applicable to specified attribute",
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "maxLength": 256
                                                  },
                                                  "Description": {
                                                    "description": "Description for 'Other' code set value applicable to specified attribute",
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "FeeChargeApplicationFrequency": {
                                                "description": "Frequency with which the rate, or amount is charged",
                                                "type": "string",
                                                "enum": ["AcademicTerm", "Daily", "Weekly", "Monthly", "Quarterly", "Half-Yearly", "Yearly", "Overnight", "Other"]
                                              },
                                              "FeeChargeOtherApplicationFrequency": {
                                                "description": "Other Code Type",
                                                "type": "object",
                                                "properties": {
                                                  "Code": {
                                                    "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                                    "type": "string",
                                                    "minLength": 4,
                                                    "maxLength": 4
                                                  },
                                                  "Name": {
                                                    "description": "Name of 'Other' code set value applicable to specified attribute",
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "maxLength": 256
                                                  },
                                                  "Description": {
                                                    "description": "Description for 'Other' code set value applicable to specified attribute",
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "FeeChargeCalculationFrequency": {
                                                "description": "Frequency with which the rate, or amount is calculated",
                                                "type": "string",
                                                "enum": ["AcademicTerm", "Daily", "Weekly", "Monthly", "Quarterly", "Half-Yearly", "Yearly", "Overnight", "Other"]
                                              },
                                              "FeeChargeOtherCalculationFrequency": {
                                                "description": "Other Code Type",
                                                "type": "object",
                                                "properties": {
                                                  "Code": {
                                                    "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                                    "type": "string",
                                                    "minLength": 4,
                                                    "maxLength": 4
                                                  },
                                                  "Name": {
                                                    "description": "Name of 'Other' code set value applicable to specified attribute",
                                                    "type": "string",
                                                    "minLength": 1,
                                                    "maxLength": 256
                                                  },
                                                  "Description": {
                                                    "description": "Description for 'Other' code set value applicable to specified attribute",
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "required": ["FeeChargeType"],
                                            "additionalProperties": false
                                          },
                                          "uniqueItems": true
                                        },
                                        "Notes": {
                                          "description": "Notes on the Overdraft",
                                          "type": "string"
                                        }
                                      },
                                      "required": ["TierValueMinimum", "TierValueMaximum"],
                                      "additionalProperties": false
                                    }
                                  },
                                  "Notes": {
                                    "description": "Notes on the Overdraft",
                                    "type": "string"
                                  }
                                },
                                "required": ["CMADefinedIndicator", "ArrangementType"],
                                "additionalProperties": false
                              }
                            },
                            "FeeChargeNegotiableIndicator": {
                              "description": "Fee Charge negotiable Indicator",
                              "type": "string",
                              "enum": ["No", "Yes"]
                            },
                            "FeesAndCharges": {
                              "type": "array",
                              "items": {
                                "description": "Overdraft Fees Charges",
                                "type": "object",
                                "properties": {
                                  "FeeChargeType": {
                                    "description": "Type of fee or charge",
                                    "type": "string",
                                    "enum": ["Periodic", "Minimum", "Maximum", "Setup", "Review", "Renewal", "MinimumSetup", "MaximumSetup", "Total", "Item", "EmergencyLending", "Other"]
                                  },
                                  "FeeChargeOtherType": {
                                    "description": "Other Code Type",
                                    "type": "object",
                                    "properties": {
                                      "Code": {
                                        "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                        "type": "string",
                                        "minLength": 4,
                                        "maxLength": 4
                                      },
                                      "Name": {
                                        "description": "Name of 'Other' code set value applicable to specified attribute",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 256
                                      },
                                      "Description": {
                                        "description": "Description for 'Other' code set value applicable to specified attribute",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "FeeChargeAmount": {
                                    "description": "Charge applied to tier",
                                    "type": "string",
                                    "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                  },
                                  "FeeChargeRate": {
                                    "description": "Fee charge rate applied to tier",
                                    "type": "string",
                                    "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                  },
                                  "FeeChargeRateType": {
                                    "description": "Rate type other than EAR",
                                    "type": "string",
                                    "enum": ["Gross", "Net", "Other"]
                                  },
                                  "FeeChargeRateOtherType": {
                                    "description": "Other Code Type",
                                    "type": "object",
                                    "properties": {
                                      "Code": {
                                        "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                        "type": "string",
                                        "minLength": 4,
                                        "maxLength": 4
                                      },
                                      "Name": {
                                        "description": "Name of 'Other' code set value applicable to specified attribute",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 256
                                      },
                                      "Description": {
                                        "description": "Description for 'Other' code set value applicable to specified attribute",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "FeeChargeApplicationFrequency": {
                                    "description": "Frequency with which the rate, or amount is charged",
                                    "type": "string",
                                    "enum": ["AcademicTerm", "Daily", "Weekly", "Monthly", "Quarterly", "Half-Yearly", "Yearly", "Overnight", "Other"]
                                  },
                                  "FeeChargeOtherApplicationFrequency": {
                                    "description": "Other Code Type",
                                    "type": "object",
                                    "properties": {
                                      "Code": {
                                        "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                        "type": "string",
                                        "minLength": 4,
                                        "maxLength": 4
                                      },
                                      "Name": {
                                        "description": "Name of 'Other' code set value applicable to specified attribute",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 256
                                      },
                                      "Description": {
                                        "description": "Description for 'Other' code set value applicable to specified attribute",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "FeeChargeCalculationFrequency": {
                                    "description": "Frequency with which the rate, or amount is calculated",
                                    "type": "string",
                                    "enum": ["AcademicTerm", "Daily", "Weekly", "Monthly", "Quarterly", "Half-Yearly", "Yearly", "Overnight", "Other"]
                                  },
                                  "FeeChargeOtherCalculationFrequency": {
                                    "description": "Other Code Type",
                                    "type": "object",
                                    "properties": {
                                      "Code": {
                                        "description": "Code mnemonic for 'Other' code set value applicable to specified attribute",
                                        "type": "string",
                                        "minLength": 4,
                                        "maxLength": 4
                                      },
                                      "Name": {
                                        "description": "Name of 'Other' code set value applicable to specified attribute",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 256
                                      },
                                      "Description": {
                                        "description": "Description for 'Other' code set value applicable to specified attribute",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "required": ["FeeChargeType"],
                                "additionalProperties": false
                              }
                            },
                            "MaximumMonthlyOverdraftCharge": {
                              "description": "Maximum Monthly Charge (MMC) for Overdraft fee and charges.",
                              "type": "string",
                              "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                            },
                            "OverdraftType": {
                              "description": "Defines if the overdraft facility is committed ",
                              "type": "string",
                              "enum": ["Committed", "OnDemand"]
                            },
                            "Term": {
                              "description": "The duration of the overdraft, if it is non permanent",
                              "type": "string"
                            },
                            "Notes": {
                              "description": "Notes on the overdraft",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "FeesAndCharges": {
                        "type": "array",
                        "items": {
                          "description": "Fees And Charges",
                          "type": "object",
                          "properties": {
                            "ProductState": {
                              "description": "Describes if the offering is promotional or a description of a future state.",
                              "type": "string",
                              "enum": ["FutureMultipleTerms", "Promotional", "Regular"]
                            },
                            "Fees": {
                              "description": "Fees",
                              "type": "object",
                              "properties": {
                                "StartPromotionOrFutureTerms": {
                                  "description": "Describes the start date",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "StopPromotionOrFutureTerms": {
                                  "description": "Describes the end date",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "LengthPromotionalInDays": {
                                  "description": "Describes the length if only a duration is given instead of a date",
                                  "type": "integer"
                                },
                                "DateOfChange": {
                                  "description": "Date of the change if it refers to future terms",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "FeeLowerTier": {
                                  "description": "Lower occurrence / range boundary e.g.. For returned cheques this could be 0, which means the first returned cheque fits into this range",
                                  "type": "integer"
                                },
                                "FeeHigherTier": {
                                  "description": "Higher occurrence / range boundary e.g. For returned cheques this could be 10, which means the first 10 returned cheque fits into this range",
                                  "type": "integer"
                                },
                                "FeeDetails": {
                                  "type": "array",
                                  "items": {
                                    "description": "Fee Details",
                                    "type": "object",
                                    "properties": {
                                      "FeeSubType": {
                                        "description": "Fee Sub Type code",
                                        "type": "string",
                                        "enum": ["FutureMultipleTerms", "Promotional", "Regular"]
                                      },
                                      "FeeDetail": {
                                        "description": "Fee Detail",
                                        "type": "object",
                                        "properties": {
                                          "FeeType": {
                                            "description": "A description of the Fee type",
                                            "type": "string",
                                            "enum": ["Other", "ATMDonation", "ATMDeposATMPaidIn", "ReportCertBalance", "ATMAbroadConVisaCredit", "ATMAbroadConVisaDebit", "ATMCardnetEnvIn", "ATMCashGroupATMCreditCard", "ATMCashNonGroupATMCredittcard", "ATMCashGroupATMDebitCard", "ATMCashNonGroupATMDebitcard", "ATMConGroupATM", "ATMAbroad", "ATMForeignCashDebCard", "ATMAbroadGoldVisaDebit", "ATMSpainCashCard", "ATMSpainDebitCard", "ATMSpainConversionDebitCard", "ATMSpainConversionCashCard", "ATMNonSterlingWithdrawal", "ATMAbroadVisaCredit", "ATMAbroadVisaDebit", "ATMAbroadConVisaGoldDebit", "ATMWidthdrawCash", "BACSOnLineAncilliary", "BACSBatch", "BACSOnLineFile", "BACSFileItem", "BACSOnLineSetup ", "BACSItem", "BACSItemInterbranch", "BACSBulkBatch", "BACSOnLineOverlimit", "BACSOnLinePayment", "BACSRecallItem", "BACSOnLineService", "BACSBulkInternet", "BACSTELDirDebSmartCard", "BACSTELDirDebWebInit", "BACSTELirDebWebInit", "BACSTELDirDebOverlimit", "BACSTELDirDebPayment", "BACSTELDirDebService", "BACSTELDirDebAncilliary", "BACSDirectItemProfile", "BACSTELAncilliary", "BACSTELSmartCard", "BACSTELFile", "BACSTELSetup ", "BACSTELOverlimit", "BACSTELPayment", "BACSTELService", "CHAPSOutBranch", "CHAPSCancellation", "CHAPSOutOnlineDepositAcc", "CHAPSIn", "CHAPSOutInterBank", "CHAPSInterBank", "CHAPSOutPost", "CHAPSOutInterBranch", "CHAPSOut", "CHAPSOutOnline", "CHAPSandForeignPay", "CHAPSOutManual", "CardCardReplacement", "DraftsCounter", "DraftsBankers", "DraftsIntlPayableAbroad", "DraftsLostStolen", "CardPersonalisedCard", "DraftsIntlStoppedCancelled", "EuroChqXLess", "EuroChqXPlus", "FPSOutFutureDated", "FPSOutImmediate", "FPSOut", "FPSOutOwn", "FPSInBranch", "FPSUKPayUrgent", "LegalArticlesReport", "LegalSealing", "LegalBondAndGuarantee", "LegalCourtOrder", "LegalCoSearch", "LegalDepositAssignment", "LegalGuaranteePrep", "LegalLifePolicyPrepCo", "LegalLifePolicyPrepPersonal", "LegalPriorityPariPassu", "LegalSubordinationAgreement", "DirDebDirectDebitAdmin", "DirDebDirectDebitCancel", "IntlPayBIBForeignLimit", "IntlPayCreditTransCust", "IntlPayCreditTransNonCust", "IntlPayUrgentPaymentForeign", "IntlPayExpressMoneyMover", "IntlPayEEAPayUrgent", "IntlPayIrishPayUrgent", "IntlPayEEAPay", "IntlPayForeignIn1CPlus", "IntlPayForeignPaymentInUKAcc", "IntlPayForeignCharge", "IntlPayForeignCancellation", "IntlPayForeignStandardEUEuroBIC", "IntlPayFXFeeRate", "IntlPayForeignInternet", "IntlPayForeign", "IntlPayForeignInbound", "IntlPayFXPaymentOut", "IntlPayForeignInSub1C", "IntlPayFXRate", "IntlPayForeignStandardEUEuroNoBIC", "IntlPayFXPaymentOutIR", "IntlPayFXFee", "IntlPayPurchaseNonSterling", "IntlPayPostPaymentForeign", "IntlPayPurchaseRateNonSterling", "IntlPayPaymentTracing", "IntlPayStandardMoneyMover", "IntlPayMT101Transaction", "IntlPayTransNonSterling", "IntlPayTransRateNonSterling", "IntlPayForeignUrgentEUEuroBIC", "IntlPayForeignUrgentEUEuroNoBIC", "IntlPayUrgentPaymentGroup", "IntlPayUrgentPaymentUK", "IntlPayUSAPayUrgent", "IntlPayCurrencyPurchase", "IntlPayWorldpayPayment", "IntlPayCurrencyWithdraw", "InvPayBankDetailsWrong", "InvPayForeignBCNR", "InvPayForeignRecall", "InvGeneralInq", "InvOldInstruction", "InvPayPaymentRecall", "InvPayReturnDebitXVLess", "InvPayReturnDebitXVPlus", "InvPayStopPayment", "InvPayStandingOrdUnpaid", "SafeKeepAccess", "SafeKeepDeedMedium", "SafeKeepingEnvelope", "SafeKeepingInspection", "SafeKeepingLargeItem", "SafeKeepMultipleItems", "SafeKeepingParcel", "SafeKeepDeedSmall", "SafeKeepOneItem", "SafeKeepSafeCustody", "LoanArrangementFeePC", "LoanArrangement", "LoanEarlyRepayment", "LoanLatePayment", "LoanSMEUnsecuredLoan", "LoanTieredArrangement", "NightSafeNightSafeBankOpen", "NightSafeCreditSub5K", "NightSafeNightSafe", "NightSafeNightSafePaidIn", "OverdraftAnnualReview", "OverdraftTempOverdraft", "OverdraftUnauthorisedBorrowing", "POPostOfficeCounterCredit", "POPostOfficeCashCredit", "POPostOfficeCashOut", "POPostOfficeWithdrawal", "ChqBookTheftLossAllStopped", "ChqIssuedCurrencyAcc", "ChqCopy", "ChqDraft", "ChqIn", "ChqDraftSterling", "ChqOutIssued", "ChqSpecialChqPresentation", "ChqCounterCheque", "ChqChequeswithStatement", "ChqStopped", "ChqTrans", "ChqDraftFX", "ChqForeignCourier", "ChqForeignNegTenThou", "ChqForeignNegHundred", "ChequeForeignBankDivi", "ChqForeignNegFiftyThou", "ChqPensionCheque", "ChequeForeignOtherDivi", "ChqForeignNegFiveThou", "ChqForeignNegMax", "ChqForeignGBPMMDPlus", "ChqGiftCheque", "ChqCounterLodgement", "ChqCashDropLodgement", "ChqChequePhotocopy", "ChqPostOfficeCredit", "ChqPostOfficeChequeCollected", "ChqChequeRetrieval", "ChqReconcilliationPerTrans", "ChqSpecialPresentationCount", "ChqSpecialPresentationPTT", "ChqUnpaidCharge", "ChqUnpaidTransIn", "ChqUnpaidTransOut", "ChqUnpaidCheque", "ReportAuditLetter", "ReportFAXAdviceAdditional", "ReportTelAdviceAdditional", "ReportCreditHistory", "ReportCertInterestDuplicate", "ReportCertInterest", "ReportCreditHistoryAdditionalInYear", "ReportForeignStatusEnqElec", "ReportForeignStatusEnq", "ReportCashBackorInterestAnal", "ReportStatementChqDaily", "ReportStatementChqFortnightly", "ReportStatementChqMonthly", "ReportStatementChqWeekly", "ReportStatementAndDiviChq", "ReportReference", "ReportReferralItem", "ReportStatementByATM", "ReportStatementByBranch", "ReportStatementCopyRegular", "ReportStatusEnquiry", "ReportStatementFrequent", "ReportStatementMonthly", "ReportStatementCopy1", "ReportStatementToBranch", "ReportSMSTextMiniStatementorAlert", "ReportStatementFortnightly", "ReportSMSTextMiniStatementWoM", "ReportSMSTextAlertBalance", "ReportSMSTextAlert", "ReportTaxCert", "ReportWeeklyStatement", "ReportTextMessageBanking", "SEPACancellation", "SEPABranch", "SEPACredit", "SEPADirectDebit", "SEPAIn", "SEPAEuro", "SEPAOut", "SEPAUnpaid", "SEPAWinbitsAnnual Service", "SEPAWinbitsTransaction", "TransBillPaymentBranch", "TransBillCollect", "TransTelephoneBillPayment", "TransBankPayment", "TransBillPaymentTelephone", "TransCorrespondentBankFee", "TransCreditTransferUKDifferent", "TransCreditTransferUKSame", "TransCredit", "TransCreditTransfer", "TransBranchCredit", "TransDebit", "TransDebCardDeb", "TransUKDirDeb", "TransManualDeb", "TransBuyForeignWithGBP", "TransGoodValueReq", "TransSWIFTOutUKForeign", "TransInconpleteInstruction", "TransManualEntries", "TransManualTrans", "TransNonSterling", "TransPOSSaleForeign", "TransPriPaymentPost", "TransPOSSaleUK", "TransReturnPayment", "TransReconciliationPerTrans", "TransStandingOrdAdmin", "TransStandingOrd", "TransStandingOrdManPay", "TransTravellersChqOtherBank", "TransTelBusiPriPaymentForeignToUKAcc", "TransTeleItem", "TransTelBusiPriPaymentToGrpAcc", "TransTravellersChqRate", "TransTransferExGroup", "TransUnauthorisedPaidTrans", "TransUrgentPaymentPostal", "TransUnpaidTrans", "TransTelBusiPriPaymentToNonGrpAcc", "TransSWIFTOutNonEEASterling", "AutoAutoCredit", "AutoAutomatedEntries", "AutoAutoCreditPhoneInet", "AutoAutomatedTrans", "AutoDebitCardCommercial", "AutoFPSAutoCredit", "VisaConvertAbroadForeign", "VisaBureauDeChange", "VisaTravellersChqorCurrency", "OnlineInternetBillPayment", "OnlineBusinessOnlineEuroPayment", "OnlineBusinessOnlineUrgentEuroPayment", "OnlineBusinessOnlineForeignPayment", "OnlineInterbankTransfer", "OnlineInterbankPerTransfer", "OnlineInterbranchTransfer", "OnlineInterbranchPerTransfer", "OnlineSubscriptionMonthly", "OnlineBankingPayment", "OnlineBankingSubscription", "OnlinePOSSale", "OnlinePersonalCustAncillarys", "OnlinePersonalCustService", "OnlinePersonalCustOverlimits", "OnlineReplacementCardReader", "OnlinePersonalCustSetUp", "OnlinePersonalCustTransaction", "OnlinePaymentinGBPtoUK", "OnlineUrgentPayment", "OnlinePaymentinUSDtoUS", "OnlineBulkDirectDebSterling", "ForeignChqSent", "ForeignChqSelf", "ForeignChqEncashment", "ForeignFXInwardsCust", "ForeignFXTransfersROI", "ForeignFXForwardTrans", "ForeignFXTransfersBOI", "ForeignExMaintenance", "ForeignFXInwardsNonCust", "ForeignFXOutwards", "ForeignPurchase", "ForeignStatusRep", "ForeignChqDraft", "ForeignChqCLess", "ForeignChqMLess", "ForeignChqOther", "ForeignChqMPlus", "ForeignChqCCC", "ServiceCAccountFee", "ServiceCAccountFeeMonthly", "ServiceCAccountFeeQuarterly", "ServiceCBalanceHandling", "ServiceCFixedTariff", "ServiceCBusiDepAccBreakage", "ServiceCMonitorDaily", "ServiceCManagementFee", "ServiceCMinimumMonthlyFee", "ServiceCMonitorMonthly", "ServiceCMonitorWeekly", "ServiceCSecurityFee", "ServiceCMT940AccountFirst", "ServiceCMT940AccountSubsequent", "ServiceCOther", "CounterCoinHandling", "CounterCashIn", "CounterCashInNotUs", "CounterCashOut", "CounterCashX", "CounterForeignCashMax", "CounterForeignNoteHandling", "CounterForeignCashOut", "CounterCashFeeRate", "CounterForeignCashOutTx", "CounterCounterLodgement", "CounterCashDropLodgement", "CounterNotesLodged", "CounterNotesOut", "CounterCashInOwn", "CounterPaidTrans", "CounterCashFeePercent"]
                                          },
                                          "Other": {
                                            "description": "Describe other fee type",
                                            "type": "string"
                                          },
                                          "StartPromotionOrFutureTerms": {
                                            "description": "Describes the start date",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "StopPromotionOrFutureTerms": {
                                            "description": "Describes the end date",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "LengthPromotionalInDays": {
                                            "description": "Describes the length if only a duration is given instead of a date",
                                            "type": "integer"
                                          },
                                          "DateOfChange": {
                                            "description": "Date of the change if it refers to future terms",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "FeeSubDetails": {
                                            "description": "Fee Sub Details",
                                            "type": "object",
                                            "properties": {
                                              "FeeFrequency": {
                                                "description": "Triggering frequency of the fee",
                                                "type": "string",
                                                "enum": ["AcademicTerm", "AccountClosing", "AccountOpening", "AtTimeOfLoanRepayment", "ChargingPeriod", "Daily", "EveryFiveBusinessDays", "Item", "Monthly", "OnAccountAnniversary", "PerHour", "PerOccurrence", "PerSheet", "PerTransactionAmount", "PerTransactionPercentage", "Quarterly", "SixMonthly", "StartOfLoan", "StatementMonthly", "Weekly", "Yearly"]
                                              },
                                              "FeeAmount": {
                                                "description": "Fee in GBP",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                              },
                                              "FeeMin": {
                                                "description": "Fee in GBP",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                              },
                                              "FeeMax": {
                                                "description": "Fee in GBP",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                              },
                                              "FeeRate": {
                                                "description": "% Rate",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                              },
                                              "Negotiable": {
                                                "description": "Indicates that this Fee Rate or Fee Amount is negotiable based on risk or other factor",
                                                "type": "boolean"
                                              },
                                              "RepresentativeRate": {
                                                "description": "Representative Rate",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                              },
                                              "FeeLowerTier": {
                                                "description": "Lower occurrence / range boundary e.g. For returned cheques this could be 0, which means the first returned cheque fits into this range",
                                                "type": "integer"
                                              },
                                              "FeeHigherTier": {
                                                "description": "Higher occurrence / range boundary e.g. For returned cheques this could be 10, which means the first 10 returned cheque fits into this range",
                                                "type": "integer"
                                              },
                                              "FeesAndChargesNotes": {
                                                "description": "Supplementary information for fees and charges",
                                                "type": "string"
                                              }
                                            },
                                            "required": ["FeeFrequency", "Negotiable"],
                                            "additionalProperties": false
                                          }
                                        },
                                        "required": ["FeeType", "FeeSubDetails"],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": ["FeeSubType", "FeeDetail"],
                                    "additionalProperties": false
                                  },
                                  "minItems": 1
                                }
                              },
                              "required": ["FeeDetails"],
                              "additionalProperties": false
                            }
                          },
                          "required": ["ProductState", "Fees"],
                          "additionalProperties": false
                        },
                        "minItems": 1
                      },
                      "Benefits": {
                        "description": "Benefit",
                        "type": "object",
                        "properties": {
                          "Benefit": {
                            "description": "Describe  one or more benefits if they exist",
                            "type": "boolean"
                          },
                          "BenefitGroup": {
                            "type": "array",
                            "items": {
                              "description": "Benefit Interest Group",
                              "type": "object",
                              "properties": {
                                "BenefitSubType": {
                                  "description": "Benefit Subtype Code",
                                  "type": "string",
                                  "enum": ["FutureMultipleTerms", "Promotional", "Regular"]
                                },
                                "BenefitItem": {
                                  "description": "Benefit Item",
                                  "type": "object",
                                  "properties": {
                                    "StartPromotionOrFutureTerms": {
                                      "description": "Describes the start date",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "StopPromotionOrFutureTerms": {
                                      "description": "Describes the end date",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "LengthPromotionalInDays": {
                                      "description": "Describes the length if only a duration is given instead of a date in days",
                                      "type": "integer"
                                    },
                                    "DateOfChange": {
                                      "description": "Date of the change if it refers to future terms",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "BenefitDetail": {
                                      "type": "array",
                                      "items": {
                                        "description": "Benefit detail",
                                        "type": "object",
                                        "properties": {
                                          "BenefitType": {
                                            "description": "Type that represents the nature of the benefit",
                                            "type": "string"
                                          },
                                          "BenefitName": {
                                            "description": "The name of the benefit",
                                            "type": "string"
                                          },
                                          "BenefitValue": {
                                            "description": "The value or values permissible for a specific benefit for an individual product representing a product characteristic",
                                            "type": "string"
                                          },
                                          "DefaultToAccounts": {
                                            "description": "Is the benefit part of the default account",
                                            "type": "boolean"
                                          },
                                          "BenefitID": {
                                            "description": "Unique benefit identifier per organisation",
                                            "type": "string"
                                          },
                                          "CriteriaType": {
                                            "type": "array",
                                            "items": {
                                              "description": "Criteria that is required in order to be eligible for the Benefit",
                                              "type": "string",
                                              "enum": ["CashDeposit", "Deposit", "DirectDebit", "InitialDeposit", "InternetLogon", "MobileLogon", "RegularDeposit"]
                                            }
                                          },
                                          "MinimumCriteria": {
                                            "description": "Minimum amount for the criteria",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                          },
                                          "MaximumCriteria": {
                                            "description": "Maximum amount for the criteria",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                          },
                                          "Counter": {
                                            "description": "Counter for the criteria (e.g. number of DD)",
                                            "type": "integer"
                                          },
                                          "BenefitDescription": {
                                            "description": "A textual explanation of what the benefit is",
                                            "type": "string"
                                          },
                                          "PromotionStartDate": {
                                            "description": "If the benefit is temporal the start date is when the benefit comes into effect",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "PromotionEndDate": {
                                            "description": "If the benefit is temporal the end date is when the benefit is no longer applicable",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "required": ["BenefitItem"],
                              "additionalProperties": false
                            }
                          }
                        },
                        "required": ["Benefit"],
                        "additionalProperties": false
                      }
                    },
                    "required": ["Organisation", "ProductType", "ProductSegment", "InternationalPaymentsSupported", "ProductIdentifier", "CardWithdrawalLimit", "ProductDescription", "TsandCs", "AccessChannels", "CardType", "Contactless", "ChequeBookAvailable", "CreditScoringPartOfAccountOpeningForGettingAnAccount", "ProductURL", "Currency", "OverdraftOffered", "CAPricing", "Eligibility", "CreditInterest", "FeesAndCharges", "Benefits"]
                  }
                }
              },
              "required": ["meta", "data"],
              "additionalProperties": false
            }
          },
          "400": {
            "description": "You have sent a request which could not be understood.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "400 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["400"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Bad request"]
                },
                "description": {
                  "type": "string",
                  "enum": ["You have sent a request which could not be understood."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "408": {
            "description": "Your client has failed to submit a request, and a timeout has occurred.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "408 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["408"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Client timeout"]
                },
                "description": {
                  "type": "string",
                  "enum": ["Your client has failed to submit a request, and a timeout has occurred."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "429": {
            "description": "You have requested this resource too often. Slow down.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "429 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["429"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Too many requests"]
                },
                "description": {
                  "type": "string",
                  "enum": ["You have requested this resource too often. Slow down."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "500": {
            "description": "An error occurred on the server. No further information is available.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "500 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["500"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Internal server error"]
                },
                "description": {
                  "type": "string",
                  "enum": ["An error occurred on the server. No further information is available."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "503": {
            "description": "The service is temporarily unavailable.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "503 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["503"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Service temporarily unavailable"]
                },
                "description": {
                  "type": "string",
                  "enum": ["The service is temporarily unavailable."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "default": {
            "description": "A standard error response.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "Error object",
              "type": "object",
              "properties": {
                "status": {
                  "description": "This corresponds to the HTTP status code",
                  "type": "string"
                },
                "title": {
                  "description": "A short title of the type of error",
                  "type": "string"
                },
                "description": {
                  "description": "Further details describing the error",
                  "type": "string"
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          }
        }
      },
      "head": {
        "tags": ["BCA"],
        "description": "Gets header information on the current set of `Business Current Account` data",
        "parameters": [{
          "name": "If-Modified-Since",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if modified since a given date",
          "in": "header",
          "required": false
        }, {
          "name": "If-None-Match",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "in": "header",
          "required": false
        }],
        "responses": {
          "default": {
            "description": "No response",
            "schema": {
              "title": "No response",
              "type": "object",
              "properties": {}
            }
          }
        }
      }
    },
    "/unsecured-sme-loans": {
      "get": {
        "tags": ["SME"],
        "description": "Gets a list of all `Unsercured SME Lending` objects.",
        "parameters": [{
          "name": "If-Modified-Since",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if modified since a given date",
          "in": "header",
          "required": false
        }, {
          "name": "If-None-Match",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "in": "header",
          "required": false
        }],
        "responses": {
          "200": {
            "description": "Successful response with a list of `Unsecured SME Lending` data",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header",
                "default": "max-age=31536000"
              },
              "Etag": {
                "type": "string",
                "description": "A unique ID identifying whether this resource has changed"
              },
              "Cache-Control": {
                "type": "string",
                "description": "Describes how long this response can be cached",
                "default": "max-age=28800"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "title": "Meta data",
                  "type": "object",
                  "properties": {
                    "LastUpdated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "TotalResults": {
                      "type": "integer"
                    },
                    "Agreement": {
                      "type": "string",
                      "enum": ["Use of the APIs and any related data will be subject to the terms of the Open Licence and subject to terms and conditions"]
                    },
                    "License": {
                      "description": "Open Banking License",
                      "type": "string",
                      "format": "uri",
                      "enum": ["https://www.openbanking.org.uk/open-licence"]
                    },
                    "TermsOfUse": {
                      "description": "Open Banking Terms of Use",
                      "type": "string",
                      "format": "uri",
                      "enum": ["https://www.openbanking.org.uk/terms"]
                    }
                  },
                  "required": ["LastUpdated", "TotalResults", "Agreement", "License", "TermsOfUse"],
                  "additionalProperties": false
                },
                "data": {
                  "type": "array",
                  "items": {
                    "description": "SME Loan",
                    "type": "object",
                    "properties": {
                      "Organisation": {
                        "description": "Organisation",
                        "type": "object",
                        "properties": {
                          "ParentOrganisation": {
                            "description": "Parent organisation",
                            "type": "object",
                            "properties": {
                              "LEI": {
                                "description": "The LEI ID of the organisation",
                                "type": "string",
                                "pattern": "^[A-Z0-9]{18,18}[0-9]{2,2}$"
                              },
                              "BIC": {
                                "description": "The BIC from the organisation",
                                "type": "string",
                                "pattern": "[A-Z]{6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3})?"
                              },
                              "OrganisationName": {
                                "description": "Organisation Name",
                                "type": "object",
                                "properties": {
                                  "LegalName": {
                                    "description": "Legal Name of the organisation",
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 35
                                  }
                                },
                                "required": ["LegalName"],
                                "additionalProperties": false
                              }
                            },
                            "required": ["OrganisationName"],
                            "additionalProperties": false
                          },
                          "Brand": {
                            "description": "Brand",
                            "type": "object",
                            "properties": {
                              "TrademarkIPOCode": {
                                "description": "The Intellectual Property Office (IPO) is the official body responsible for intellectual property (IP) rights including patents, designs, trademarks and copyright. (Code: UK or EU only)",
                                "type": "string",
                                "enum": ["UK", "EU"]
                              },
                              "TrademarkID": {
                                "description": "The trademark number that has been registered with the Intellectual Property Office. Note: The 2 letter IPO prefix should be omitted",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 35
                              }
                            },
                            "required": ["TrademarkIPOCode", "TrademarkID"],
                            "additionalProperties": false
                          }
                        },
                        "required": ["ParentOrganisation", "Brand"],
                        "additionalProperties": false
                      },
                      "ProductName": {
                        "description": "The short product or marketing name assigned by the parent organisation",
                        "type": "string"
                      },
                      "ProductIdentifier": {
                        "description": "Identifier within the parent organisation for the product. Must be unique in the organisation",
                        "type": "string"
                      },
                      "ArrearsTreatment": {
                        "description": "Arrears treatment",
                        "type": "string"
                      },
                      "ProductTypeName": {
                        "description": "Descriptive code for the product category",
                        "type": "string",
                        "enum": ["FlexibleBusinessLoan", "SmallBusinessLoan", "SmeUnsecuredLoan"]
                      },
                      "ProductURL": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uri"
                        },
                        "minItems": 1
                      },
                      "ProductSegment": {
                        "type": "array",
                        "items": {
                          "description": "Marketing or industry segment that the product is applicable for. Gives the sector or segment that the Loan is designed for",
                          "type": "string",
                          "enum": ["AgricultureSector", "AllSegmentsCorporate", "Corporate", "FixedGroup", "FlexibleBusinessLoan", "GovernmentScheme", "NewCustomersOnly", "SmallLoan", "SpecialisedSector", "SwitchersOnly"]
                        },
                        "minItems": 1
                      },
                      "ProductDescription": {
                        "description": "Description of the product provided by the parent Organisation",
                        "type": "string"
                      },
                      "TsandCs": {
                        "description": "URL provided by the parent organisation which redirects to the T&Cs",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1
                      },
                      "CustomerAccessChannels": {
                        "description": "Ways to interact with the bank",
                        "type": "array",
                        "items": {
                          "description": "",
                          "type": "string",
                          "enum": ["Branch", "MobileBankingApp", "Online", "Phone", "Post", "PostOffice", "Text"]
                        },
                        "minItems": 1
                      },
                      "Currency": {
                        "description": "Currency of the Account. Default to GBP at present",
                        "type": "array",
                        "items": {
                          "description": "Active or Historic Currency Code",
                          "type": "string",
                          "pattern": "[A-Z]{3}"
                        },
                        "minItems": 1
                      },
                      "MinimumLoanTerm": {
                        "description": "Minimum term (Days)",
                        "type": "integer"
                      },
                      "MaximumLoanTerm": {
                        "description": "Maximum loan term (Days)",
                        "type": "integer"
                      },
                      "MinimumLoanAmount": {
                        "description": "Minimum loan amount",
                        "type": "string",
                        "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                      },
                      "MaximumLoanAmount": {
                        "description": "Maximum loan amount",
                        "type": "string",
                        "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                      },
                      "PaymentHoliday": {
                        "description": "Indicates whether a repayment holiday is allowed",
                        "type": "boolean"
                      },
                      "LoanItem": {
                        "type": "array",
                        "items": {
                          "description": "Loan Item",
                          "type": "object",
                          "properties": {
                            "ProductState": {
                              "description": "Describes if the offering is promotional or a description of a future state.",
                              "type": "string",
                              "enum": ["FutureMultipleTerms", "Promotional", "Regular"]
                            },
                            "StartPromotionOrFutureTerms": {
                              "description": "Describes the start date",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "StopPromotionOrFutureTerms": {
                              "description": "Describes the end date",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "LengthPromotionalInDays": {
                              "description": "Describes the length if only a duration is given instead of a date in days",
                              "type": "integer"
                            },
                            "DateOfChange": {
                              "description": "Date of the change if it refers to future terms",
                              "type": "string",
                              "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                            },
                            "LoanPricing": {
                              "type": "array",
                              "items": {
                                "description": "Loan Pricing",
                                "type": "object",
                                "properties": {
                                  "SizeIncrement": {
                                    "description": "Identifier for tier only where it has been supplied under Part 8 (article 32 or the CMA order), value reflects upper tier value",
                                    "type": "string",
                                    "enum": ["£5000", "£10000", "£15000", "£20000", "£25000", "Other", "TierMaximum", "TierMinimum"]
                                  },
                                  "LoanLengthIncrement": {
                                    "description": "Loan Length Increments",
                                    "type": "string",
                                    "enum": ["1 year", "2 years", "3 years", "4 years", "5 years"]
                                  },
                                  "RepaymentFrequency": {
                                    "type": "array",
                                    "items": {
                                      "description": "Repayment Frequency Code",
                                      "type": "string",
                                      "enum": ["Daily", "Flexible", "Fortnightly", "HalfYearly", "Monthly", "Quarterly", "Weekly", "Yearly"]
                                    },
                                    "minItems": 1,
                                    "uniqueItems": true
                                  },
                                  "LoanSizeBandLower": {
                                    "description": "Monetary amount without currency",
                                    "type": "string",
                                    "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                  },
                                  "LoanSizeBandUpper": {
                                    "description": "Monetary amount without currency",
                                    "type": "string",
                                    "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                  },
                                  "LoanLengthIncrementLower": {
                                    "type": "integer"
                                  },
                                  "LoanLengthIncrementUpper": {
                                    "type": "integer"
                                  },
                                  "IndicativeRate": {
                                    "type": "string"
                                  },
                                  "RateComparisonType": {
                                    "description": "Rate Comparison Type",
                                    "type": "string",
                                    "enum": ["APR", "AER", "Gross", "Net", "RepApr"]
                                  },
                                  "Negotiable": {
                                    "type": "boolean"
                                  }
                                },
                                "required": ["SizeIncrement", "LoanLengthIncrement", "RepaymentFrequency", "LoanSizeBandLower", "LoanSizeBandUpper", "LoanLengthIncrementLower", "LoanLengthIncrementUpper", "IndicativeRate", "Negotiable"],
                                "additionalProperties": false
                              }
                            },
                            "CCARegulatedEntity": {
                              "type": "boolean"
                            },
                            "IsALowInterestRepaymentStartPossible": {
                              "type": "boolean"
                            },
                            "IsThisAnInterestOnlyLoan": {
                              "type": "boolean"
                            },
                            "WillTheLoanBePaidInTrancheDrawdowns": {
                              "type": "boolean"
                            }
                          },
                          "required": ["ProductState", "CCARegulatedEntity", "IsALowInterestRepaymentStartPossible", "IsThisAnInterestOnlyLoan", "WillTheLoanBePaidInTrancheDrawdowns"],
                          "additionalProperties": false
                        }
                      },
                      "Eligibility": {
                        "description": "Eligibility",
                        "type": "object",
                        "properties": {
                          "AgeRestricted": {
                            "description": "Indicates a customer's age is part of eligibility criteria",
                            "type": "boolean"
                          },
                          "MinimumAge": {
                            "description": "Minimum age, in years, required to hold an account",
                            "type": "integer"
                          },
                          "MaximumAge": {
                            "description": "Maximum age, in years, allowed to hold the account",
                            "type": "integer"
                          },
                          "MaximumAgeToOpen": {
                            "description": "Maximum age, in years, to open an account",
                            "type": "integer"
                          },
                          "OtherFinancialHoldingRequired": {
                            "description": "Indicates that it is necessary to hold another product with the bank in order to be eligible for this product or feature",
                            "type": "boolean"
                          },
                          "Description": {
                            "description": "One paragraph detailing the eligibility",
                            "type": "string"
                          },
                          "IncomeTurnoverRelated": {
                            "description": "Indicates if eligibility linked to income",
                            "type": "boolean"
                          },
                          "SingleJointIncome": {
                            "description": "Minimum Income Source. For certain products a minimum income is required. This can be mandated as to the single income or to a joint income. This field describes this",
                            "type": "string",
                            "enum": ["Joint", "SoleIncome", "SoleOrJoint", "Turnover"]
                          },
                          "MinimumIncomeTurnoverAmount": {
                            "description": "Minimum income / Turnover required to hold the product",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "MinimumIncomeTurnoverCurrency": {
                            "description": "Minimum income / Turnover Currency",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "IncomeCondition": {
                            "description": "Stipulates any particular definition of income that applies to the income eligibility and/or method by which income must paid into the account (eg Salary DD)",
                            "type": "string"
                          },
                          "MinIncomeTurnoverPaidIntoAccount": {
                            "description": "Minimum Income Amount required to paid into the account",
                            "type": "integer"
                          },
                          "MinimumIncomeFrequency": {
                            "description": "The frequency that the minimum mentioned before is deposited in the account. Yearly is very important for premium accounts",
                            "type": "string",
                            "enum": ["AcademicTerm", "HalfYearly", "Monthly", "Quarterly", "Weekly", "Yearly"]
                          },
                          "AnnualBusinessTurnover": {
                            "description": "Annual Business Turnover",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "AnnualBusinessTurnoverCurrency": {
                            "description": "Annual Business Turnover Currency",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "ResidencyRestricted": {
                            "description": "Indicates a customer's residency forms part of the eligibility criteria",
                            "type": "boolean"
                          },
                          "ResidencyRestrictedRegion": {
                            "description": "Indicates a customer must be current resident of a geographic area/country",
                            "type": "string",
                            "enum": ["UK", "EEA", "EU", "EFTA", "GB - ENG", "GB - NIR", "GB - SCT", "GB - WLS", "IRL"]
                          },
                          "MaxNumberOfAccounts": {
                            "description": "Maximum number of the same prodcut the customer may hold",
                            "type": "string"
                          },
                          "ThirdSectorOrganisations": {
                            "description": "Is the product available to operate as a Clubs or Societies account?",
                            "type": "boolean"
                          },
                          "MinimumDeposit": {
                            "description": "A minimum deposit required to hold this account",
                            "type": "boolean"
                          },
                          "OpeningDepositMinimum": {
                            "description": "Minimum Amount to be held on account",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "OpeningDepositMinimumCurrency": {
                            "description": "The currency of the Minimum Amount to be depositing at opening",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "MinimumOperatingBalanceExists": {
                            "description": "Is there a Minimum Operating Balance?",
                            "type": "boolean"
                          },
                          "MinimumOperatingBalance": {
                            "description": "Minimum Operating Balance",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "MinimumOperatingBalanceCurrency": {
                            "description": "Minimum Operating Balance currency",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "MaximumOpeningAmount": {
                            "description": "A maximum amount to be deposited at opening",
                            "type": "boolean"
                          },
                          "OpeningDepositMaximumAmount": {
                            "description": "Maximum Amount to be depositing at opening",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "OpeningDepositMaximumCurrency": {
                            "description": "The currency of the Minimum Amount to be depositing at opening",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "EligibilityName": {
                            "description": "Free text description, denotes non standard eligibilities not included in the code list",
                            "type": "string"
                          },
                          "EligibilityType": {
                            "description": "Eligibility type",
                            "type": "string",
                            "enum": ["AnyBusinessCustomer", "BusinessOnly", "CreditCard", "CreditScoring", "EmailAddress", "ExistingCustomers", "IdAndV", "Mortgage", "NoArrearsOnLoan", "NoCustomerInArrears", "NoOverOverdraftThirtyDays", "NoSoleUkAccountOrBankrupt", "NTB", "NTBBusiness", "SoleStudentAccount", "SoleUkAccount", "StudentsOnly", "TwoMonthsOfCourseStart", "UCASFulltimeTwoYears"]
                          },
                          "EligibilityNotes": {
                            "description": "Optional additional notes to supplement the eligibility conditions. Only used for very specific conditions",
                            "type": "string"
                          },
                          "PreviousBankruptcy": {
                            "description": "Describes if a previous bankruptcy / insolvency disqualfies for this account Details in ELI-280",
                            "type": "boolean"
                          },
                          "MarketingEligibility": {
                            "type": "array",
                            "items": {
                              "description": "Specific eligibility for marketing",
                              "type": "string",
                              "enum": ["ExistingCustomers", "NewCustomersOnly", "SwitchersOnly", "StartUp"]
                            },
                            "uniqueItems": true
                          }
                        },
                        "required": ["AgeRestricted", "OtherFinancialHoldingRequired", "Description", "IncomeTurnoverRelated", "ResidencyRestricted", "ThirdSectorOrganisations", "PreviousBankruptcy"],
                        "additionalProperties": false
                      },
                      "FeesAndCharges": {
                        "type": "array",
                        "items": {
                          "description": "Fees And Charges",
                          "type": "object",
                          "properties": {
                            "ProductState": {
                              "description": "Describes if the offering is promotional or a description of a future state.",
                              "type": "string",
                              "enum": ["FutureMultipleTerms", "Promotional", "Regular"]
                            },
                            "Fees": {
                              "description": "Fees",
                              "type": "object",
                              "properties": {
                                "StartPromotionOrFutureTerms": {
                                  "description": "Describes the start date",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "StopPromotionOrFutureTerms": {
                                  "description": "Describes the end date",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "LengthPromotionalInDays": {
                                  "description": "Describes the length if only a duration is given instead of a date",
                                  "type": "integer"
                                },
                                "DateOfChange": {
                                  "description": "Date of the change if it refers to future terms",
                                  "type": "string",
                                  "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                },
                                "FeeLowerTier": {
                                  "description": "Lower occurrence / range boundary e.g.. For returned cheques this could be 0, which means the first returned cheque fits into this range",
                                  "type": "integer"
                                },
                                "FeeHigherTier": {
                                  "description": "Higher occurrence / range boundary e.g. For returned cheques this could be 10, which means the first 10 returned cheque fits into this range",
                                  "type": "integer"
                                },
                                "FeeDetails": {
                                  "type": "array",
                                  "items": {
                                    "description": "Fee Details",
                                    "type": "object",
                                    "properties": {
                                      "FeeSubType": {
                                        "description": "Fee Sub Type code",
                                        "type": "string",
                                        "enum": ["FutureMultipleTerms", "Promotional", "Regular"]
                                      },
                                      "FeeDetail": {
                                        "description": "Fee Detail",
                                        "type": "object",
                                        "properties": {
                                          "FeeType": {
                                            "description": "A description of the Fee type",
                                            "type": "string",
                                            "enum": ["Other", "ATMDonation", "ATMDeposATMPaidIn", "ReportCertBalance", "ATMAbroadConVisaCredit", "ATMAbroadConVisaDebit", "ATMCardnetEnvIn", "ATMCashGroupATMCreditCard", "ATMCashNonGroupATMCredittcard", "ATMCashGroupATMDebitCard", "ATMCashNonGroupATMDebitcard", "ATMConGroupATM", "ATMAbroad", "ATMForeignCashDebCard", "ATMAbroadGoldVisaDebit", "ATMSpainCashCard", "ATMSpainDebitCard", "ATMSpainConversionDebitCard", "ATMSpainConversionCashCard", "ATMNonSterlingWithdrawal", "ATMAbroadVisaCredit", "ATMAbroadVisaDebit", "ATMAbroadConVisaGoldDebit", "ATMWidthdrawCash", "BACSOnLineAncilliary", "BACSBatch", "BACSOnLineFile", "BACSFileItem", "BACSOnLineSetup ", "BACSItem", "BACSItemInterbranch", "BACSBulkBatch", "BACSOnLineOverlimit", "BACSOnLinePayment", "BACSRecallItem", "BACSOnLineService", "BACSBulkInternet", "BACSTELDirDebSmartCard", "BACSTELDirDebWebInit", "BACSTELirDebWebInit", "BACSTELDirDebOverlimit", "BACSTELDirDebPayment", "BACSTELDirDebService", "BACSTELDirDebAncilliary", "BACSDirectItemProfile", "BACSTELAncilliary", "BACSTELSmartCard", "BACSTELFile", "BACSTELSetup ", "BACSTELOverlimit", "BACSTELPayment", "BACSTELService", "CHAPSOutBranch", "CHAPSCancellation", "CHAPSOutOnlineDepositAcc", "CHAPSIn", "CHAPSOutInterBank", "CHAPSInterBank", "CHAPSOutPost", "CHAPSOutInterBranch", "CHAPSOut", "CHAPSOutOnline", "CHAPSandForeignPay", "CHAPSOutManual", "CardCardReplacement", "DraftsCounter", "DraftsBankers", "DraftsIntlPayableAbroad", "DraftsLostStolen", "CardPersonalisedCard", "DraftsIntlStoppedCancelled", "EuroChqXLess", "EuroChqXPlus", "FPSOutFutureDated", "FPSOutImmediate", "FPSOut", "FPSOutOwn", "FPSInBranch", "FPSUKPayUrgent", "LegalArticlesReport", "LegalSealing", "LegalBondAndGuarantee", "LegalCourtOrder", "LegalCoSearch", "LegalDepositAssignment", "LegalGuaranteePrep", "LegalLifePolicyPrepCo", "LegalLifePolicyPrepPersonal", "LegalPriorityPariPassu", "LegalSubordinationAgreement", "DirDebDirectDebitAdmin", "DirDebDirectDebitCancel", "IntlPayBIBForeignLimit", "IntlPayCreditTransCust", "IntlPayCreditTransNonCust", "IntlPayUrgentPaymentForeign", "IntlPayExpressMoneyMover", "IntlPayEEAPayUrgent", "IntlPayIrishPayUrgent", "IntlPayEEAPay", "IntlPayForeignIn1CPlus", "IntlPayForeignPaymentInUKAcc", "IntlPayForeignCharge", "IntlPayForeignCancellation", "IntlPayForeignStandardEUEuroBIC", "IntlPayFXFeeRate", "IntlPayForeignInternet", "IntlPayForeign", "IntlPayForeignInbound", "IntlPayFXPaymentOut", "IntlPayForeignInSub1C", "IntlPayFXRate", "IntlPayForeignStandardEUEuroNoBIC", "IntlPayFXPaymentOutIR", "IntlPayFXFee", "IntlPayPurchaseNonSterling", "IntlPayPostPaymentForeign", "IntlPayPurchaseRateNonSterling", "IntlPayPaymentTracing", "IntlPayStandardMoneyMover", "IntlPayMT101Transaction", "IntlPayTransNonSterling", "IntlPayTransRateNonSterling", "IntlPayForeignUrgentEUEuroBIC", "IntlPayForeignUrgentEUEuroNoBIC", "IntlPayUrgentPaymentGroup", "IntlPayUrgentPaymentUK", "IntlPayUSAPayUrgent", "IntlPayCurrencyPurchase", "IntlPayWorldpayPayment", "IntlPayCurrencyWithdraw", "InvPayBankDetailsWrong", "InvPayForeignBCNR", "InvPayForeignRecall", "InvGeneralInq", "InvOldInstruction", "InvPayPaymentRecall", "InvPayReturnDebitXVLess", "InvPayReturnDebitXVPlus", "InvPayStopPayment", "InvPayStandingOrdUnpaid", "SafeKeepAccess", "SafeKeepDeedMedium", "SafeKeepingEnvelope", "SafeKeepingInspection", "SafeKeepingLargeItem", "SafeKeepMultipleItems", "SafeKeepingParcel", "SafeKeepDeedSmall", "SafeKeepOneItem", "SafeKeepSafeCustody", "LoanArrangementFeePC", "LoanArrangement", "LoanEarlyRepayment", "LoanLatePayment", "LoanSMEUnsecuredLoan", "LoanTieredArrangement", "NightSafeNightSafeBankOpen", "NightSafeCreditSub5K", "NightSafeNightSafe", "NightSafeNightSafePaidIn", "OverdraftAnnualReview", "OverdraftTempOverdraft", "OverdraftUnauthorisedBorrowing", "POPostOfficeCounterCredit", "POPostOfficeCashCredit", "POPostOfficeCashOut", "POPostOfficeWithdrawal", "ChqBookTheftLossAllStopped", "ChqIssuedCurrencyAcc", "ChqCopy", "ChqDraft", "ChqIn", "ChqDraftSterling", "ChqOutIssued", "ChqSpecialChqPresentation", "ChqCounterCheque", "ChqChequeswithStatement", "ChqStopped", "ChqTrans", "ChqDraftFX", "ChqForeignCourier", "ChqForeignNegTenThou", "ChqForeignNegHundred", "ChequeForeignBankDivi", "ChqForeignNegFiftyThou", "ChqPensionCheque", "ChequeForeignOtherDivi", "ChqForeignNegFiveThou", "ChqForeignNegMax", "ChqForeignGBPMMDPlus", "ChqGiftCheque", "ChqCounterLodgement", "ChqCashDropLodgement", "ChqChequePhotocopy", "ChqPostOfficeCredit", "ChqPostOfficeChequeCollected", "ChqChequeRetrieval", "ChqReconcilliationPerTrans", "ChqSpecialPresentationCount", "ChqSpecialPresentationPTT", "ChqUnpaidCharge", "ChqUnpaidTransIn", "ChqUnpaidTransOut", "ChqUnpaidCheque", "ReportAuditLetter", "ReportFAXAdviceAdditional", "ReportTelAdviceAdditional", "ReportCreditHistory", "ReportCertInterestDuplicate", "ReportCertInterest", "ReportCreditHistoryAdditionalInYear", "ReportForeignStatusEnqElec", "ReportForeignStatusEnq", "ReportCashBackorInterestAnal", "ReportStatementChqDaily", "ReportStatementChqFortnightly", "ReportStatementChqMonthly", "ReportStatementChqWeekly", "ReportStatementAndDiviChq", "ReportReference", "ReportReferralItem", "ReportStatementByATM", "ReportStatementByBranch", "ReportStatementCopyRegular", "ReportStatusEnquiry", "ReportStatementFrequent", "ReportStatementMonthly", "ReportStatementCopy1", "ReportStatementToBranch", "ReportSMSTextMiniStatementorAlert", "ReportStatementFortnightly", "ReportSMSTextMiniStatementWoM", "ReportSMSTextAlertBalance", "ReportSMSTextAlert", "ReportTaxCert", "ReportWeeklyStatement", "ReportTextMessageBanking", "SEPACancellation", "SEPABranch", "SEPACredit", "SEPADirectDebit", "SEPAIn", "SEPAEuro", "SEPAOut", "SEPAUnpaid", "SEPAWinbitsAnnual Service", "SEPAWinbitsTransaction", "TransBillPaymentBranch", "TransBillCollect", "TransTelephoneBillPayment", "TransBankPayment", "TransBillPaymentTelephone", "TransCorrespondentBankFee", "TransCreditTransferUKDifferent", "TransCreditTransferUKSame", "TransCredit", "TransCreditTransfer", "TransBranchCredit", "TransDebit", "TransDebCardDeb", "TransUKDirDeb", "TransManualDeb", "TransBuyForeignWithGBP", "TransGoodValueReq", "TransSWIFTOutUKForeign", "TransInconpleteInstruction", "TransManualEntries", "TransManualTrans", "TransNonSterling", "TransPOSSaleForeign", "TransPriPaymentPost", "TransPOSSaleUK", "TransReturnPayment", "TransReconciliationPerTrans", "TransStandingOrdAdmin", "TransStandingOrd", "TransStandingOrdManPay", "TransTravellersChqOtherBank", "TransTelBusiPriPaymentForeignToUKAcc", "TransTeleItem", "TransTelBusiPriPaymentToGrpAcc", "TransTravellersChqRate", "TransTransferExGroup", "TransUnauthorisedPaidTrans", "TransUrgentPaymentPostal", "TransUnpaidTrans", "TransTelBusiPriPaymentToNonGrpAcc", "TransSWIFTOutNonEEASterling", "AutoAutoCredit", "AutoAutomatedEntries", "AutoAutoCreditPhoneInet", "AutoAutomatedTrans", "AutoDebitCardCommercial", "AutoFPSAutoCredit", "VisaConvertAbroadForeign", "VisaBureauDeChange", "VisaTravellersChqorCurrency", "OnlineInternetBillPayment", "OnlineBusinessOnlineEuroPayment", "OnlineBusinessOnlineUrgentEuroPayment", "OnlineBusinessOnlineForeignPayment", "OnlineInterbankTransfer", "OnlineInterbankPerTransfer", "OnlineInterbranchTransfer", "OnlineInterbranchPerTransfer", "OnlineSubscriptionMonthly", "OnlineBankingPayment", "OnlineBankingSubscription", "OnlinePOSSale", "OnlinePersonalCustAncillarys", "OnlinePersonalCustService", "OnlinePersonalCustOverlimits", "OnlineReplacementCardReader", "OnlinePersonalCustSetUp", "OnlinePersonalCustTransaction", "OnlinePaymentinGBPtoUK", "OnlineUrgentPayment", "OnlinePaymentinUSDtoUS", "OnlineBulkDirectDebSterling", "ForeignChqSent", "ForeignChqSelf", "ForeignChqEncashment", "ForeignFXInwardsCust", "ForeignFXTransfersROI", "ForeignFXForwardTrans", "ForeignFXTransfersBOI", "ForeignExMaintenance", "ForeignFXInwardsNonCust", "ForeignFXOutwards", "ForeignPurchase", "ForeignStatusRep", "ForeignChqDraft", "ForeignChqCLess", "ForeignChqMLess", "ForeignChqOther", "ForeignChqMPlus", "ForeignChqCCC", "ServiceCAccountFee", "ServiceCAccountFeeMonthly", "ServiceCAccountFeeQuarterly", "ServiceCBalanceHandling", "ServiceCFixedTariff", "ServiceCBusiDepAccBreakage", "ServiceCMonitorDaily", "ServiceCManagementFee", "ServiceCMinimumMonthlyFee", "ServiceCMonitorMonthly", "ServiceCMonitorWeekly", "ServiceCSecurityFee", "ServiceCMT940AccountFirst", "ServiceCMT940AccountSubsequent", "ServiceCOther", "CounterCoinHandling", "CounterCashIn", "CounterCashInNotUs", "CounterCashOut", "CounterCashX", "CounterForeignCashMax", "CounterForeignNoteHandling", "CounterForeignCashOut", "CounterCashFeeRate", "CounterForeignCashOutTx", "CounterCounterLodgement", "CounterCashDropLodgement", "CounterNotesLodged", "CounterNotesOut", "CounterCashInOwn", "CounterPaidTrans", "CounterCashFeePercent"]
                                          },
                                          "Other": {
                                            "description": "Describe other fee type",
                                            "type": "string"
                                          },
                                          "StartPromotionOrFutureTerms": {
                                            "description": "Describes the start date",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "StopPromotionOrFutureTerms": {
                                            "description": "Describes the end date",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "LengthPromotionalInDays": {
                                            "description": "Describes the length if only a duration is given instead of a date",
                                            "type": "integer"
                                          },
                                          "DateOfChange": {
                                            "description": "Date of the change if it refers to future terms",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "FeeSubDetails": {
                                            "description": "Fee Sub Details",
                                            "type": "object",
                                            "properties": {
                                              "FeeFrequency": {
                                                "description": "Triggering frequency of the fee",
                                                "type": "string",
                                                "enum": ["AcademicTerm", "AccountClosing", "AccountOpening", "AtTimeOfLoanRepayment", "ChargingPeriod", "Daily", "EveryFiveBusinessDays", "Item", "Monthly", "OnAccountAnniversary", "PerHour", "PerOccurrence", "PerSheet", "PerTransactionAmount", "PerTransactionPercentage", "Quarterly", "SixMonthly", "StartOfLoan", "StatementMonthly", "Weekly", "Yearly"]
                                              },
                                              "FeeAmount": {
                                                "description": "Fee in GBP",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                              },
                                              "FeeMin": {
                                                "description": "Fee in GBP",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                              },
                                              "FeeMax": {
                                                "description": "Fee in GBP",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                              },
                                              "FeeRate": {
                                                "description": "% Rate",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                              },
                                              "Negotiable": {
                                                "description": "Indicates that this Fee Rate or Fee Amount is negotiable based on risk or other factor",
                                                "type": "boolean"
                                              },
                                              "RepresentativeRate": {
                                                "description": "Representative Rate",
                                                "type": "string",
                                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                                              },
                                              "FeeLowerTier": {
                                                "description": "Lower occurrence / range boundary e.g. For returned cheques this could be 0, which means the first returned cheque fits into this range",
                                                "type": "integer"
                                              },
                                              "FeeHigherTier": {
                                                "description": "Higher occurrence / range boundary e.g. For returned cheques this could be 10, which means the first 10 returned cheque fits into this range",
                                                "type": "integer"
                                              },
                                              "FeesAndChargesNotes": {
                                                "description": "Supplementary information for fees and charges",
                                                "type": "string"
                                              }
                                            },
                                            "required": ["FeeFrequency", "Negotiable"],
                                            "additionalProperties": false
                                          }
                                        },
                                        "required": ["FeeType", "FeeSubDetails"],
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": ["FeeSubType", "FeeDetail"],
                                    "additionalProperties": false
                                  },
                                  "minItems": 1
                                }
                              },
                              "required": ["FeeDetails"],
                              "additionalProperties": false
                            }
                          },
                          "required": ["ProductState", "Fees"],
                          "additionalProperties": false
                        },
                        "minItems": 1
                      },
                      "Benefits": {
                        "description": "Benefit",
                        "type": "object",
                        "properties": {
                          "Benefit": {
                            "description": "Describe  one or more benefits if they exist",
                            "type": "boolean"
                          },
                          "BenefitGroup": {
                            "type": "array",
                            "items": {
                              "description": "Benefit Interest Group",
                              "type": "object",
                              "properties": {
                                "BenefitSubType": {
                                  "description": "Benefit Subtype Code",
                                  "type": "string",
                                  "enum": ["FutureMultipleTerms", "Promotional", "Regular"]
                                },
                                "BenefitItem": {
                                  "description": "Benefit Item",
                                  "type": "object",
                                  "properties": {
                                    "StartPromotionOrFutureTerms": {
                                      "description": "Describes the start date",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "StopPromotionOrFutureTerms": {
                                      "description": "Describes the end date",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "LengthPromotionalInDays": {
                                      "description": "Describes the length if only a duration is given instead of a date in days",
                                      "type": "integer"
                                    },
                                    "DateOfChange": {
                                      "description": "Date of the change if it refers to future terms",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "BenefitDetail": {
                                      "type": "array",
                                      "items": {
                                        "description": "Benefit detail",
                                        "type": "object",
                                        "properties": {
                                          "BenefitType": {
                                            "description": "Type that represents the nature of the benefit",
                                            "type": "string"
                                          },
                                          "BenefitName": {
                                            "description": "The name of the benefit",
                                            "type": "string"
                                          },
                                          "BenefitValue": {
                                            "description": "The value or values permissible for a specific benefit for an individual product representing a product characteristic",
                                            "type": "string"
                                          },
                                          "DefaultToAccounts": {
                                            "description": "Is the benefit part of the default account",
                                            "type": "boolean"
                                          },
                                          "BenefitID": {
                                            "description": "Unique benefit identifier per organisation",
                                            "type": "string"
                                          },
                                          "CriteriaType": {
                                            "type": "array",
                                            "items": {
                                              "description": "Criteria that is required in order to be eligible for the Benefit",
                                              "type": "string",
                                              "enum": ["CashDeposit", "Deposit", "DirectDebit", "InitialDeposit", "InternetLogon", "MobileLogon", "RegularDeposit"]
                                            }
                                          },
                                          "MinimumCriteria": {
                                            "description": "Minimum amount for the criteria",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                          },
                                          "MaximumCriteria": {
                                            "description": "Maximum amount for the criteria",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                          },
                                          "Counter": {
                                            "description": "Counter for the criteria (e.g. number of DD)",
                                            "type": "integer"
                                          },
                                          "BenefitDescription": {
                                            "description": "A textual explanation of what the benefit is",
                                            "type": "string"
                                          },
                                          "PromotionStartDate": {
                                            "description": "If the benefit is temporal the start date is when the benefit comes into effect",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "PromotionEndDate": {
                                            "description": "If the benefit is temporal the end date is when the benefit is no longer applicable",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "required": ["BenefitItem"],
                              "additionalProperties": false
                            }
                          }
                        },
                        "required": ["Benefit"],
                        "additionalProperties": false
                      }
                    },
                    "required": ["Organisation", "ProductName", "ProductIdentifier", "ProductTypeName", "ProductURL", "ProductSegment", "ProductDescription", "TsandCs", "CustomerAccessChannels", "Currency", "MinimumLoanTerm", "MaximumLoanTerm", "MinimumLoanAmount", "MaximumLoanAmount", "PaymentHoliday", "LoanItem", "Eligibility", "FeesAndCharges", "Benefits"],
                    "additionalProperties": false
                  }
                }
              },
              "required": ["meta", "data"],
              "additionalProperties": false
            }
          },
          "400": {
            "description": "You have sent a request which could not be understood.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "400 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["400"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Bad request"]
                },
                "description": {
                  "type": "string",
                  "enum": ["You have sent a request which could not be understood."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "408": {
            "description": "Your client has failed to submit a request, and a timeout has occurred.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "408 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["408"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Client timeout"]
                },
                "description": {
                  "type": "string",
                  "enum": ["Your client has failed to submit a request, and a timeout has occurred."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "429": {
            "description": "You have requested this resource too often. Slow down.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "429 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["429"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Too many requests"]
                },
                "description": {
                  "type": "string",
                  "enum": ["You have requested this resource too often. Slow down."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "500": {
            "description": "An error occurred on the server. No further information is available.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "500 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["500"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Internal server error"]
                },
                "description": {
                  "type": "string",
                  "enum": ["An error occurred on the server. No further information is available."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "503": {
            "description": "The service is temporarily unavailable.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "503 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["503"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Service temporarily unavailable"]
                },
                "description": {
                  "type": "string",
                  "enum": ["The service is temporarily unavailable."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "default": {
            "description": "A standard error response.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "Error object",
              "type": "object",
              "properties": {
                "status": {
                  "description": "This corresponds to the HTTP status code",
                  "type": "string"
                },
                "title": {
                  "description": "A short title of the type of error",
                  "type": "string"
                },
                "description": {
                  "description": "Further details describing the error",
                  "type": "string"
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          }
        }
      },
      "head": {
        "tags": ["SME"],
        "description": "Gets header information on the current set of `Unsercured SME Lending` data",
        "parameters": [{
          "name": "If-Modified-Since",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if modified since a given date",
          "in": "header",
          "required": false
        }, {
          "name": "If-None-Match",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "in": "header",
          "required": false
        }],
        "responses": {
          "default": {
            "description": "No response",
            "schema": {
              "title": "No response",
              "type": "object",
              "properties": {}
            }
          }
        }
      }
    },
    "/commercial-credit-cards": {
      "get": {
        "tags": ["CCC"],
        "description": "Gets a list of all `Commerical Credit Card` objects.",
        "parameters": [{
          "name": "If-Modified-Since",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if modified since a given date",
          "in": "header",
          "required": false
        }, {
          "name": "If-None-Match",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "in": "header",
          "required": false
        }],
        "responses": {
          "200": {
            "description": "Successful response with a list of `Commercial Credit Card` data",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header",
                "default": "max-age=31536000"
              },
              "Etag": {
                "type": "string",
                "description": "A unique ID identifying whether this resource has changed"
              },
              "Cache-Control": {
                "type": "string",
                "description": "Describes how long this response can be cached",
                "default": "max-age=28800"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "title": "Meta data",
                  "type": "object",
                  "properties": {
                    "LastUpdated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "TotalResults": {
                      "type": "integer"
                    },
                    "Agreement": {
                      "type": "string",
                      "enum": ["Use of the APIs and any related data will be subject to the terms of the Open Licence and subject to terms and conditions"]
                    },
                    "License": {
                      "description": "Open Banking License",
                      "type": "string",
                      "format": "uri",
                      "enum": ["https://www.openbanking.org.uk/open-licence"]
                    },
                    "TermsOfUse": {
                      "description": "Open Banking Terms of Use",
                      "type": "string",
                      "format": "uri",
                      "enum": ["https://www.openbanking.org.uk/terms"]
                    }
                  },
                  "required": ["LastUpdated", "TotalResults", "Agreement", "License", "TermsOfUse"],
                  "additionalProperties": false
                },
                "data": {
                  "type": "array",
                  "items": {
                    "description": "Commercial Credit Card",
                    "type": "object",
                    "properties": {
                      "Organisation": {
                        "description": "Organisation",
                        "type": "object",
                        "properties": {
                          "ParentOrganisation": {
                            "description": "Parent organisation",
                            "type": "object",
                            "properties": {
                              "LEI": {
                                "description": "The LEI ID of the organisation",
                                "type": "string",
                                "pattern": "^[A-Z0-9]{18,18}[0-9]{2,2}$"
                              },
                              "BIC": {
                                "description": "The BIC from the organisation",
                                "type": "string",
                                "pattern": "[A-Z]{6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3})?"
                              },
                              "OrganisationName": {
                                "description": "Organisation Name",
                                "type": "object",
                                "properties": {
                                  "LegalName": {
                                    "description": "Legal Name of the organisation",
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 35
                                  }
                                },
                                "required": ["LegalName"],
                                "additionalProperties": false
                              }
                            },
                            "required": ["OrganisationName"],
                            "additionalProperties": false
                          },
                          "Brand": {
                            "description": "Brand",
                            "type": "object",
                            "properties": {
                              "TrademarkIPOCode": {
                                "description": "The Intellectual Property Office (IPO) is the official body responsible for intellectual property (IP) rights including patents, designs, trademarks and copyright. (Code: UK or EU only)",
                                "type": "string",
                                "enum": ["UK", "EU"]
                              },
                              "TrademarkID": {
                                "description": "The trademark number that has been registered with the Intellectual Property Office. Note: The 2 letter IPO prefix should be omitted",
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 35
                              }
                            },
                            "required": ["TrademarkIPOCode", "TrademarkID"],
                            "additionalProperties": false
                          }
                        },
                        "required": ["ParentOrganisation", "Brand"],
                        "additionalProperties": false
                      },
                      "ProductName": {
                        "description": "Name of the Commercial Credit Card",
                        "type": "string"
                      },
                      "ProductType": {
                        "description": "Descriptive code for the product category",
                        "type": "string",
                        "enum": ["CommercialCreditCards"]
                      },
                      "ProductSegment": {
                        "description": "Marketing or industry segment that the product is designed for",
                        "type": "array",
                        "items": {
                          "description": "Marketing or industry segment that the product is designed for",
                          "type": "string",
                          "enum": ["Cashback", "Corporate", "General", "Reward", "SME"]
                        }
                      },
                      "ProductIdentifier": {
                        "description": "Identifier within the parent organisation for the product. Must be unique in the organisation",
                        "type": "string"
                      },
                      "ProductURL": {
                        "description": "URL provided by the organisation which redirects to the product (on live products only). There might be more than one product at a given URL",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uri"
                        },
                        "minItems": 1
                      },
                      "Description": {
                        "description": "Product description",
                        "type": "string"
                      },
                      "KeyFeatures": {
                        "description": "Product key features",
                        "type": "string"
                      },
                      "PaymentHoliday": {
                        "description": "Indicates whether a payment holiday is possible",
                        "type": "boolean"
                      },
                      "PaymentHolidayDescription": {
                        "description": "Detailed description on the payment holiday if available",
                        "type": "string"
                      },
                      "OtherKeyFeatures": {
                        "description": "Additional Features of the card",
                        "type": "string"
                      },
                      "TsandCs": {
                        "description": "URL provided by the parent organisation which redirects to the current T&Cs. Only applies on live products",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1
                      },
                      "Details": {
                        "description": "Commercial Credit Card Group ",
                        "type": "object",
                        "properties": {
                          "CCSubType": {
                            "description": "CCC Subtype Code",
                            "type": "string",
                            "enum": ["FutureMultipleTerms", "Promotional", "Regular"]
                          },
                          "CommercialCreditCardItem": {
                            "description": "Commercial Credit Card Item ",
                            "type": "object",
                            "properties": {
                              "StartPromotionOrFutureTerms": {
                                "description": "Describes the start date",
                                "type": "string",
                                "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                              },
                              "StopPromotionOrFutureTerms": {
                                "description": "Describes the end date",
                                "type": "string",
                                "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                              },
                              "LengthPromotionalInDays": {
                                "description": "Describes the length if only a duration is given instead of a date",
                                "type": "integer"
                              },
                              "DateOfChange": {
                                "description": "Date of the change if it refers to future terms",
                                "type": "string",
                                "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                              },
                              "MinimumCreditLimit": {
                                "description": "Minimum £500, maximum subject to status",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "RepaymentFrequency": {
                                "description": "Repayment frequency",
                                "type": "string",
                                "enum": ["Daily", "Flexible", "Fortnightly", "HalfYearly", "Monthly", "Quarterly", "Weekly", "Yearly"]
                              },
                              "APRRate": {
                                "description": "Annual Percentage Rate",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "BalanceTransferInterestRatePeriod": {
                                "description": "The period used to define the specific interest rate for balance transfers",
                                "type": "string",
                                "enum": ["Annual", "Monthly"]
                              },
                              "PurchaseRate": {
                                "description": "Purchase rate",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "BalanceTransferRate": {
                                "description": "Balance transfer rate",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "CashAdvanceRate": {
                                "description": "Cash advance rate",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "OverLimitFee": {
                                "description": "Fee applicable if the card was credited over its limit",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "MaximumNumberOfCardsPermitted": {
                                "description": "The maximum numbers of cards per account",
                                "type": "integer"
                              },
                              "CardScheme": {
                                "description": "Card Scheme Code",
                                "type": "string",
                                "enum": ["Cashcard", "CreditMastercard", "CreditVisa"]
                              },
                              "AbilityToSetIndividualLimits": {
                                "description": "The ability to set separate limts on different cards in one account",
                                "type": "boolean"
                              },
                              "AccessToOnlineDataReportingTool": {
                                "description": "Describes whether the account have access to an online tool for reprting on expenditure",
                                "type": "boolean"
                              },
                              "CashWithdrawalsAllowed": {
                                "description": "Describes whether cash withdrawals are allowed",
                                "type": "boolean"
                              },
                              "ConvenienceCheque": {
                                "description": "Describes whether the card account allow convenience cheques",
                                "type": "boolean"
                              },
                              "DaysInterestFreeCreditIfPaymentFull": {
                                "description": "Describes how many interest free days are given if the card is fully paid at each term",
                                "type": "integer"
                              },
                              "AnnualAccountFeeType": {
                                "description": "Details on annual account fee, such as non payable when there is a turnover above a certain sum",
                                "type": "string"
                              },
                              "IssuingEmergencyCardsFees": {
                                "description": "Amount payable for issuing an emergency card",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "AnnualFeeAmount": {
                                "description": "Standard fee on the card",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "ChequeFeePercent": {
                                "description": "Percentage fee on convenience cheques",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "CashbackPercent": {
                                "description": "Percent of cashback on amount spend",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "FeesOnCheque": {
                                "description": "Percentage fee on a convenince cheques",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "MinimumRepaymentPercentage": {
                                "description": "Minimum repayment as percentage",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "MinimumRepaymentAmount": {
                                "description": "Minimum repayment amount",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "PaymentDaysAfterStatement": {
                                "description": "How many days after statement is the payment expected",
                                "type": "integer"
                              },
                              "AllocationofRepayment": {
                                "description": "Allocation rules for repayment",
                                "type": "string"
                              },
                              "RepaymentNotes": {
                                "description": "Additional notes",
                                "type": "string"
                              },
                              "MinimumLendingAmount": {
                                "description": "The minimum lending available",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "StatementAtAccountLevel": {
                                "description": "Describes whether there is a statement at account level",
                                "type": "boolean"
                              },
                              "StatementAtPersonalLevel": {
                                "description": "Describes whether there is a statement at card level",
                                "type": "boolean"
                              },
                              "PaymentSchemeExchangeRate": {
                                "description": "The base exchange rate used in settlement of the transaction between issuer and scheme",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "ExchangeRateAdjustment": {
                                "description": "The margin added, by certain card issuers, to the scheme rate in order to arrive at the exchange rate qouted as the reference exchange rate to the cardholder",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "PaymentSchemeExchangeFee": {
                                "description": "Any payment network fee applied to some or all non-sterling transactions that the card issuer recover directly from the cardholder",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "PaymentSchemeExchangeFeeRate": {
                                "description": "Any payment network fee rate applied to some or all non-sterling transactions that the card issuer recover directly from the cardholder",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "NonSterlingTransactionFee": {
                                "description": "A fee applied to all non-Sterling card transactions",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "NonSterlingTransactionFeeRate": {
                                "description": "A fee rate applied to all non-Sterling card transactions",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "NonSterlingPurchaseFee": {
                                "description": "An additional fee applied to certain card retail transactions",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "NonSterlingPurchaseFeeRate": {
                                "description": "An additional fee rate applied to certain card retail transactions",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "NonSterlingCashFee": {
                                "description": "An additional fee applied to certain card cash withdrawals. This fee also applies to cash near fees such as gambling",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "NonSterlingCashFeeRate": {
                                "description": "An additional fee rate applied to certain card cash withdrawals. This fee also applies to cash near fees such as gambling",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "ForeignPurchaseFee": {
                                "description": "Additional card fee applied to sterling retail transactions made abroad",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "ForeignPurchaseFeeRate": {
                                "description": "Additional card fee rate applied to sterling retail transactions made abroad",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              },
                              "ForeignCashFee": {
                                "description": "Additional card fee applied to sterling cash withdrawal made abroad",
                                "type": "string",
                                "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                              },
                              "ForeignCashFeeRate": {
                                "description": "Additional card fee rate applied to sterling cash withdrawal made abroad",
                                "type": "string",
                                "pattern": "^-?\\d{1,3}\\.\\d{1,4}$"
                              }
                            },
                            "required": ["MinimumCreditLimit", "RepaymentFrequency", "APRRate", "PurchaseRate", "CashAdvanceRate", "CardScheme", "AccessToOnlineDataReportingTool", "CashWithdrawalsAllowed", "ConvenienceCheque", "DaysInterestFreeCreditIfPaymentFull", "IssuingEmergencyCardsFees", "AnnualFeeAmount", "PaymentDaysAfterStatement", "StatementAtAccountLevel", "StatementAtPersonalLevel", "ExchangeRateAdjustment"],
                            "additionalProperties": false
                          }
                        },
                        "required": ["CCSubType", "CommercialCreditCardItem"],
                        "additionalProperties": false
                      },
                      "Eligibility": {
                        "description": "Eligibility",
                        "type": "object",
                        "properties": {
                          "AgeRestricted": {
                            "description": "Indicates a customer's age is part of eligibility criteria",
                            "type": "boolean"
                          },
                          "MinimumAge": {
                            "description": "Minimum age, in years, required to hold an account",
                            "type": "integer"
                          },
                          "MaximumAge": {
                            "description": "Maximum age, in years, allowed to hold the account",
                            "type": "integer"
                          },
                          "MaximumAgeToOpen": {
                            "description": "Maximum age, in years, to open an account",
                            "type": "integer"
                          },
                          "OtherFinancialHoldingRequired": {
                            "description": "Indicates that it is necessary to hold another product with the bank in order to be eligible for this product or feature",
                            "type": "boolean"
                          },
                          "Description": {
                            "description": "One paragraph detailing the eligibility",
                            "type": "string"
                          },
                          "IncomeTurnoverRelated": {
                            "description": "Indicates if eligibility linked to income",
                            "type": "boolean"
                          },
                          "SingleJointIncome": {
                            "description": "Minimum Income Source. For certain products a minimum income is required. This can be mandated as to the single income or to a joint income. This field describes this",
                            "type": "string",
                            "enum": ["Joint", "SoleIncome", "SoleOrJoint", "Turnover"]
                          },
                          "MinimumIncomeTurnoverAmount": {
                            "description": "Minimum income / Turnover required to hold the product",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "MinimumIncomeTurnoverCurrency": {
                            "description": "Minimum income / Turnover Currency",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "IncomeCondition": {
                            "description": "Stipulates any particular definition of income that applies to the income eligibility and/or method by which income must paid into the account (eg Salary DD)",
                            "type": "string"
                          },
                          "MinIncomeTurnoverPaidIntoAccount": {
                            "description": "Minimum Income Amount required to paid into the account",
                            "type": "integer"
                          },
                          "MinimumIncomeFrequency": {
                            "description": "The frequency that the minimum mentioned before is deposited in the account. Yearly is very important for premium accounts",
                            "type": "string",
                            "enum": ["AcademicTerm", "HalfYearly", "Monthly", "Quarterly", "Weekly", "Yearly"]
                          },
                          "AnnualBusinessTurnover": {
                            "description": "Annual Business Turnover",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "AnnualBusinessTurnoverCurrency": {
                            "description": "Annual Business Turnover Currency",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "ResidencyRestricted": {
                            "description": "Indicates a customer's residency forms part of the eligibility criteria",
                            "type": "boolean"
                          },
                          "ResidencyRestrictedRegion": {
                            "description": "Indicates a customer must be current resident of a geographic area/country",
                            "type": "string",
                            "enum": ["UK", "EEA", "EU", "EFTA", "GB - ENG", "GB - NIR", "GB - SCT", "GB - WLS", "IRL"]
                          },
                          "MaxNumberOfAccounts": {
                            "description": "Maximum number of the same prodcut the customer may hold",
                            "type": "string"
                          },
                          "ThirdSectorOrganisations": {
                            "description": "Is the product available to operate as a Clubs or Societies account?",
                            "type": "boolean"
                          },
                          "MinimumDeposit": {
                            "description": "A minimum deposit required to hold this account",
                            "type": "boolean"
                          },
                          "OpeningDepositMinimum": {
                            "description": "Minimum Amount to be held on account",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "OpeningDepositMinimumCurrency": {
                            "description": "The currency of the Minimum Amount to be depositing at opening",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "MinimumOperatingBalanceExists": {
                            "description": "Is there a Minimum Operating Balance?",
                            "type": "boolean"
                          },
                          "MinimumOperatingBalance": {
                            "description": "Minimum Operating Balance",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "MinimumOperatingBalanceCurrency": {
                            "description": "Minimum Operating Balance currency",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "MaximumOpeningAmount": {
                            "description": "A maximum amount to be deposited at opening",
                            "type": "boolean"
                          },
                          "OpeningDepositMaximumAmount": {
                            "description": "Maximum Amount to be depositing at opening",
                            "type": "string",
                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                          },
                          "OpeningDepositMaximumCurrency": {
                            "description": "The currency of the Minimum Amount to be depositing at opening",
                            "type": "string",
                            "pattern": "[A-Z]{3}"
                          },
                          "EligibilityName": {
                            "description": "Free text description, denotes non standard eligibilities not included in the code list",
                            "type": "string"
                          },
                          "EligibilityType": {
                            "description": "Eligibility type",
                            "type": "string",
                            "enum": ["AnyBusinessCustomer", "BusinessOnly", "CreditCard", "CreditScoring", "EmailAddress", "ExistingCustomers", "IdAndV", "Mortgage", "NoArrearsOnLoan", "NoCustomerInArrears", "NoOverOverdraftThirtyDays", "NoSoleUkAccountOrBankrupt", "NTB", "NTBBusiness", "SoleStudentAccount", "SoleUkAccount", "StudentsOnly", "TwoMonthsOfCourseStart", "UCASFulltimeTwoYears"]
                          },
                          "EligibilityNotes": {
                            "description": "Optional additional notes to supplement the eligibility conditions. Only used for very specific conditions",
                            "type": "string"
                          },
                          "PreviousBankruptcy": {
                            "description": "Describes if a previous bankruptcy / insolvency disqualfies for this account Details in ELI-280",
                            "type": "boolean"
                          },
                          "MarketingEligibility": {
                            "type": "array",
                            "items": {
                              "description": "Specific eligibility for marketing",
                              "type": "string",
                              "enum": ["ExistingCustomers", "NewCustomersOnly", "SwitchersOnly", "StartUp"]
                            },
                            "uniqueItems": true
                          }
                        },
                        "required": ["AgeRestricted", "OtherFinancialHoldingRequired", "Description", "IncomeTurnoverRelated", "ResidencyRestricted", "ThirdSectorOrganisations", "PreviousBankruptcy"],
                        "additionalProperties": false
                      },
                      "Benefits": {
                        "description": "Benefit",
                        "type": "object",
                        "properties": {
                          "Benefit": {
                            "description": "Describe  one or more benefits if they exist",
                            "type": "boolean"
                          },
                          "BenefitGroup": {
                            "type": "array",
                            "items": {
                              "description": "Benefit Interest Group",
                              "type": "object",
                              "properties": {
                                "BenefitSubType": {
                                  "description": "Benefit Subtype Code",
                                  "type": "string",
                                  "enum": ["FutureMultipleTerms", "Promotional", "Regular"]
                                },
                                "BenefitItem": {
                                  "description": "Benefit Item",
                                  "type": "object",
                                  "properties": {
                                    "StartPromotionOrFutureTerms": {
                                      "description": "Describes the start date",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "StopPromotionOrFutureTerms": {
                                      "description": "Describes the end date",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "LengthPromotionalInDays": {
                                      "description": "Describes the length if only a duration is given instead of a date in days",
                                      "type": "integer"
                                    },
                                    "DateOfChange": {
                                      "description": "Date of the change if it refers to future terms",
                                      "type": "string",
                                      "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                    },
                                    "BenefitDetail": {
                                      "type": "array",
                                      "items": {
                                        "description": "Benefit detail",
                                        "type": "object",
                                        "properties": {
                                          "BenefitType": {
                                            "description": "Type that represents the nature of the benefit",
                                            "type": "string"
                                          },
                                          "BenefitName": {
                                            "description": "The name of the benefit",
                                            "type": "string"
                                          },
                                          "BenefitValue": {
                                            "description": "The value or values permissible for a specific benefit for an individual product representing a product characteristic",
                                            "type": "string"
                                          },
                                          "DefaultToAccounts": {
                                            "description": "Is the benefit part of the default account",
                                            "type": "boolean"
                                          },
                                          "BenefitID": {
                                            "description": "Unique benefit identifier per organisation",
                                            "type": "string"
                                          },
                                          "CriteriaType": {
                                            "type": "array",
                                            "items": {
                                              "description": "Criteria that is required in order to be eligible for the Benefit",
                                              "type": "string",
                                              "enum": ["CashDeposit", "Deposit", "DirectDebit", "InitialDeposit", "InternetLogon", "MobileLogon", "RegularDeposit"]
                                            }
                                          },
                                          "MinimumCriteria": {
                                            "description": "Minimum amount for the criteria",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                          },
                                          "MaximumCriteria": {
                                            "description": "Maximum amount for the criteria",
                                            "type": "string",
                                            "pattern": "^-?\\d{1,10}\\.\\d{1,2}$"
                                          },
                                          "Counter": {
                                            "description": "Counter for the criteria (e.g. number of DD)",
                                            "type": "integer"
                                          },
                                          "BenefitDescription": {
                                            "description": "A textual explanation of what the benefit is",
                                            "type": "string"
                                          },
                                          "PromotionStartDate": {
                                            "description": "If the benefit is temporal the start date is when the benefit comes into effect",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          },
                                          "PromotionEndDate": {
                                            "description": "If the benefit is temporal the end date is when the benefit is no longer applicable",
                                            "type": "string",
                                            "pattern": "^[0-9]{4}-(0[1-9]|(1[0|1|2]))-((0[1-9])|((1|2)[0-9])|(30|31))$"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "required": ["BenefitItem"],
                              "additionalProperties": false
                            }
                          }
                        },
                        "required": ["Benefit"],
                        "additionalProperties": false
                      }
                    },
                    "required": ["Organisation", "ProductName", "ProductType", "ProductIdentifier", "ProductURL", "Description", "KeyFeatures", "PaymentHoliday", "TsandCs", "Details", "Eligibility", "Benefits"],
                    "additionalProperties": false
                  }
                }
              },
              "required": ["meta", "data"],
              "additionalProperties": false
            }
          },
          "400": {
            "description": "You have sent a request which could not be understood.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "400 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["400"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Bad request"]
                },
                "description": {
                  "type": "string",
                  "enum": ["You have sent a request which could not be understood."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "408": {
            "description": "Your client has failed to submit a request, and a timeout has occurred.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "408 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["408"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Client timeout"]
                },
                "description": {
                  "type": "string",
                  "enum": ["Your client has failed to submit a request, and a timeout has occurred."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "429": {
            "description": "You have requested this resource too often. Slow down.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "429 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["429"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Too many requests"]
                },
                "description": {
                  "type": "string",
                  "enum": ["You have requested this resource too often. Slow down."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "500": {
            "description": "An error occurred on the server. No further information is available.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "500 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["500"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Internal server error"]
                },
                "description": {
                  "type": "string",
                  "enum": ["An error occurred on the server. No further information is available."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "503": {
            "description": "The service is temporarily unavailable.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "503 Error object",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": ["503"]
                },
                "title": {
                  "type": "string",
                  "enum": ["Service temporarily unavailable"]
                },
                "description": {
                  "type": "string",
                  "enum": ["The service is temporarily unavailable."]
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          },
          "default": {
            "description": "A standard error response.",
            "headers": {
              "Strict-Transport-Security": {
                "type": "string",
                "description": "HTTPS strict transport security header"
              },
              "X-Frame-Options": {
                "type": "string",
                "description": "Prevent this request from being loaded in any iframes",
                "default": "DENY"
              },
              "X-Content-Type-Options": {
                "type": "string",
                "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                "default": "nosniff"
              },
              "Status Code": {
                "type": "integer",
                "description": "The HTTP status code defining the error",
                "default": 400
              }
            },
            "schema": {
              "title": "Error object",
              "type": "object",
              "properties": {
                "status": {
                  "description": "This corresponds to the HTTP status code",
                  "type": "string"
                },
                "title": {
                  "description": "A short title of the type of error",
                  "type": "string"
                },
                "description": {
                  "description": "Further details describing the error",
                  "type": "string"
                }
              },
              "required": ["status", "title", "description"],
              "additionalProperties": false
            }
          }
        }
      },
      "head": {
        "tags": ["CCC"],
        "description": "Gets header information on the current set of `Commerical Credit Card` data",
        "parameters": [{
          "name": "If-Modified-Since",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if modified since a given date",
          "in": "header",
          "required": false
        }, {
          "name": "If-None-Match",
          "type": "string",
          "description": "Used for conditional request, to retrieve data only if the given Etag value does not match",
          "in": "header",
          "required": false
        }],
        "responses": {
          "default": {
            "description": "No response",
            "schema": {
              "title": "No response",
              "type": "object",
              "properties": {}
            }
          }
        }
      }
    }
  }
}
